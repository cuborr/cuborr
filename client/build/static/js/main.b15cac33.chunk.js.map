{"version":3,"sources":["../ /^/.//.*/.svg$/ groupOptions: {} namespace object","webpack:///./node_modules/@svgr/webpack/lib?69fc","store/layout/types.ts","store/layout/reducers.ts","store/user/types.ts","store/user/reducers.ts","store/index.ts","services/log.ts","data/hooks.ts","store/layout/actions.ts","components/container/container.tsx","components/divider/divider.tsx","components/checkbox/checkbox.tsx","components/input/input.tsx","components/button/button.tsx","components/icons/icons.tsx","components/vector-graphics/vector-graphics.tsx","components/bar-chart/bar.tsx","components/assignment-item/assignment-item.style.ts","services/currency.ts","components/assignment-item/assignment-item.tsx","components/footer/footer.tsx","components/navbar/components/contractor-form/contractor-form.style.ts","components/navbar/components/contractor-form/components/index-indicator.tsx","store/user/actions.ts","components/navbar/components/contractor-form/contractor-form.tsx","components/navbar/components/icons/client.tsx","components/navbar/components/icons/contractor.tsx","components/navbar/navbar.styles.ts","components/navbar/navbar.tsx","scenes/home/components/assignment-form/assignment-form.style.ts","scenes/home/components/assignment-form/components/index-indicator.tsx","scenes/home/components/assignment-form/components/loading-bar.tsx","scenes/home/components/assignment-form/assignment-form.tsx","scenes/home/components/tutorial/tutorial.style.ts","scenes/home/components/tutorial/tutorial.tsx","scenes/home/home.styles.ts","scenes/home/home.tsx","scenes/client-assignment/components/assignment-item.style.ts","scenes/client-assignment/components/contractor-item.styles.ts","scenes/client-assignment/components/contractor-item.tsx","scenes/client-assignment/components/assignment-item.tsx","scenes/client-assignment/components/rating-modal.tsx","scenes/client-assignment/client-assignment.tsx","scenes/contractor-assignment/components/assignment-item.style.ts","scenes/contractor-assignment/components/client-item.styles.ts","scenes/contractor-assignment/components/client-item.tsx","scenes/contractor-assignment/components/assignment-item.tsx","scenes/contractor-assignment/contractor-assignment.tsx","scenes/root/components/modal.tsx","scenes/root/components/prompt.tsx","scenes/root/components/alert.tsx","scenes/root/root.styles.tsx","scenes/root/root.tsx","scenes/error/404-not-found.tsx","scenes/error/unexpected-error.tsx","scenes/legal/privacy-policy.tsx","scenes/legal/company-details.tsx","scenes/legal/terms-and-conditions.tsx","scenes/metrics/metrics.tsx","routes.tsx","serviceWorker.js","i18n/i18n.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","PromptType","initialState","modalIsVisible","modalContent","prompt","undefined","alert","clientID","contractorID","LogLevel","rootReducer","combineReducers","layout","state","action","type","payload","user","writeLogEntry","log","a","message","level","moment","toISOString","JSON","stringify","error","data","ERROR","extraInfo","getConfig","access","method","headers","Authorization","useClientAssignments","history","useHistory","React","useState","assignments","setAssignments","isLoading","setIsLoading","useSelector","useEffect","fetch","res","status","json","logger","push","retrieveAssignments","useContractorAssignments","openModal","content","setPrompt","console","setAlert","StyledContainer","styled","div","Container","forwardRef","props","ref","style","className","children","Icon","svg","HiddenCheckbox","input","attrs","checked","InputContainer","focused","Input","value","label","onChange","onFocus","onBlur","setRef","setFocused","length","handleOnFocus","handleOnChange","val","String","target","defaultProps","StyledButton","button","Button","onClick","height","size","width","name","color","ImportedIconRef","useRef","loading","setLoading","current","default","importIcon","ImportedIcon","VectorGraphic","rgb","percentage","keyframes","barAnimation","Title","h5","CompensationRow","Compensation","h1","CompensationCurrency","p","Divider","Label","Number","h3","NotesLabel","Notes","ButtonRow","PrimaryButton","active","SecondaryButton","StyledIcon","isIn","str1","str2","toLowerCase","includes","getCurrency","str","AssignmentItem","item","dispatch","useDispatch","isActive","setIsActive","isOwner","setIsOwner","t","useTranslation","client","$oid","applicants","forEach","applicant","onClickApply","_id","Success","duration","text","onClickRemove","deleteAssignemt","title","confirm","cancel","compensation","currency","toUpperCase","comments","notes","href","file","download","StyledLinksGrid","GridColumn","LinkTitle","StyledLink","Link","StyledExternalLink","Row","CopyrightRow","Logo","Copyright","StyledVector","Note","DonateRow","DonateText","Footer","Wrapper","FormGrid","ButtonContainer","Dot","Bar","IndexIndicator","index","setClient","setContractor","ContractorForm","formIndex","setFormIndex","firstName","setFirstName","lastName","setLastName","country","setCountry","printerName","setPrinterName","itemNumber","setItemNumber","material","setMaterial","email","setEmail","phoneNumber","setPhoneNumber","incrementFrom","renderNextButton","onClickSubmit","body","localStorage","setItem","Circle","Text","ClientIcon","count","setCount","retrieveAssignmentCount","to","ContractorIcon","RelativeContainer","NavbarContainer","nav","StyledNavContainer","NavLink","NavRow","NavAbsolutContainer","Navbar","i18n","onChangeLanguage","language","changeLanguage","UserGrid","AddressGrid","AssignmentGrid","StyledButtonText","StyledButtonFormatText","StyledInput","StyledFileContainer","StyledCloseIcon","StyledBar","LoadingBar","AssignmentForm","streetAddress","setStreetAddress","city","setCity","postalCode","setPostalCode","setTitle","setCompensation","setCurrency","setNotes","setFile","progress","setProgress","FormData","append","request","XMLHttpRequest","open","setRequestHeader","upload","addEventListener","loaded","total","Math","round","response","parse","removeItem","send","Boolean","click","event","stopPropagation","preventDefault","f","files","accept","SubTitle","Card","Column","ColumnTitle","h6","DotContainer","span","Tutorial","window","BackgroundImage","TitleContainer","TitleWrapper","BetaBadgeContainer","BetaBadgeText","DescriptionContainer","DescriptionTextContainer","DescriptionDivider","Description","StyledAssignmentContainer","AssignmentsGrid","TutorialButtonContainer","TutorialText","Home","visible","setVisible","useAssignments","token","registerPageVisit","getItem","dangerouslySetInnerHTML","__html","key","InputRow","SendButton","CommentUserName","Comment","TableDivider","TableRow","TableName","TableValue","RatingRow","RatingColumn","StarRow","StarText","RatingLabel","ContractorItem","assignmentID","openRatingModal","onClickAcceptContractor","first_name","last_name","printer_name","item_number","phone_number","averageRating","quality","toFixed","communication","shipping","comment","setComment","onClickSendComment","contractor","user_name","IconRow","IconSpacer","RatingModal","close","setQuality","setCommunication","setShipping","onClickConfirm","i","SyledContainer","PlaceholderText","ClientAssignment","modalContractorID","setModalContractorID","openAssignments","openIsLoading","closedAssignments","closedIsLoading","ClientItem","onClickCompleteAssignment","street_address","postal_code","ContractorAssignment","Overlay","Modal","onClose","Prompt","setColor","Info","setTimeout","Alert","RootContainer","main","isBlurred","Root","NotFound","UnexpectedError","PrivacyPolicy","CompanyDetails","Caption","SectionTitle","ArticleTitle","List","ul","TermsAndConditions","AssignmentTitle","h4","AssignmentText","Metrics","assignmentsCount","setAssignmentsCount","pageVisits","setPageVisitsCount","contractorsCount","setContractorsCount","clientsCount","setClientsCount","pw","retrieveMetrics","onClickDelete","Router","exact","from","path","component","location","hostname","match","resources","en","translation","require","de","use","initReactI18next","init","lng","keySeparator","interpolation","escapeValue","locale","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"wHAAA,IAAIA,EAAM,CACT,mBAAoB,CACnB,GACA,GAED,qBAAsB,CACrB,GACA,GAED,kBAAmB,CAClB,GACA,GAED,mBAAoB,CACnB,GACA,GAED,mBAAoB,CACnB,GACA,GAED,sBAAuB,CACtB,GACA,GAED,iBAAkB,CACjB,GACA,GAED,iBAAkB,CACjB,GACA,IAED,mBAAoB,CACnB,GACA,IAED,mBAAoB,CACnB,GACA,IAED,sBAAuB,CACtB,GACA,IAED,iBAAkB,CACjB,GACA,IAED,iBAAkB,CACjB,GACA,IAED,qBAAsB,CACrB,GACA,IAED,qBAAsB,CACrB,GACA,IAED,wBAAyB,CACxB,GACA,IAED,mBAAoB,CACnB,GACA,IAED,kBAAmB,CAClB,GACA,IAED,qBAAsB,CACrB,GACA,IAED,cAAe,CACd,GACA,IAED,uBAAwB,CACvB,GACA,IAED,qBAAsB,CACrB,GACA,IAED,YAAa,CACZ,GACA,IAED,gBAAiB,CAChB,GACA,IAED,eAAgB,CACf,GACA,IAED,iBAAkB,CACjB,GACA,IAED,4BAA6B,CAC5B,GACA,IAED,0BAA2B,CAC1B,GACA,IAED,aAAc,CACb,GACA,IAED,gBAAiB,CAChB,GACA,IAED,YAAa,CACZ,GACA,IAED,cAAe,CACd,GACA,IAED,aAAc,CACb,GACA,IAED,2BAA4B,CAC3B,GACA,IAED,aAAc,CACb,IACA,IAED,oBAAqB,CACpB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,eAAgB,CACf,IACA,IAED,gBAAiB,CAChB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,sBAAuB,CACtB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,cAAe,CACd,IACA,IAED,aAAc,CACb,IACA,IAED,sBAAuB,CACtB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,aAAc,CACb,IACA,IAED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","file":"static/js/main.b15cac33.chunk.js","sourcesContent":["var map = {\n\t\"./add-circle.svg\": [\n\t\t66,\n\t\t3\n\t],\n\t\"./alert-circle.svg\": [\n\t\t67,\n\t\t4\n\t],\n\t\"./analytics.svg\": [\n\t\t68,\n\t\t5\n\t],\n\t\"./arrow-back.svg\": [\n\t\t69,\n\t\t6\n\t],\n\t\"./arrow-down.svg\": [\n\t\t70,\n\t\t7\n\t],\n\t\"./arrow-forward.svg\": [\n\t\t71,\n\t\t8\n\t],\n\t\"./arrow-up.svg\": [\n\t\t72,\n\t\t9\n\t],\n\t\"./calendar.svg\": [\n\t\t73,\n\t\t10\n\t],\n\t\"./caret-back.svg\": [\n\t\t74,\n\t\t11\n\t],\n\t\"./caret-down.svg\": [\n\t\t75,\n\t\t12\n\t],\n\t\"./caret-forward.svg\": [\n\t\t76,\n\t\t13\n\t],\n\t\"./caret-up.svg\": [\n\t\t77,\n\t\t14\n\t],\n\t\"./checkbox.svg\": [\n\t\t78,\n\t\t15\n\t],\n\t\"./chevron-back.svg\": [\n\t\t79,\n\t\t16\n\t],\n\t\"./chevron-down.svg\": [\n\t\t80,\n\t\t17\n\t],\n\t\"./chevron-forward.svg\": [\n\t\t81,\n\t\t18\n\t],\n\t\"./chevron-up.svg\": [\n\t\t82,\n\t\t19\n\t],\n\t\"./clipboard.svg\": [\n\t\t83,\n\t\t20\n\t],\n\t\"./close-circle.svg\": [\n\t\t84,\n\t\t21\n\t],\n\t\"./close.svg\": [\n\t\t85,\n\t\t22\n\t],\n\t\"./cloud-download.svg\": [\n\t\t86,\n\t\t23\n\t],\n\t\"./cloud-upload.svg\": [\n\t\t87,\n\t\t24\n\t],\n\t\"./cog.svg\": [\n\t\t88,\n\t\t25\n\t],\n\t\"./compass.svg\": [\n\t\t89,\n\t\t26\n\t],\n\t\"./create.svg\": [\n\t\t90,\n\t\t27\n\t],\n\t\"./download.svg\": [\n\t\t91,\n\t\t28\n\t],\n\t\"./ellipsis-horizontal.svg\": [\n\t\t92,\n\t\t29\n\t],\n\t\"./ellipsis-vertical.svg\": [\n\t\t93,\n\t\t30\n\t],\n\t\"./exit.svg\": [\n\t\t94,\n\t\t31\n\t],\n\t\"./eye-off.svg\": [\n\t\t95,\n\t\t32\n\t],\n\t\"./eye.svg\": [\n\t\t96,\n\t\t33\n\t],\n\t\"./globe.svg\": [\n\t\t97,\n\t\t34\n\t],\n\t\"./home.svg\": [\n\t\t98,\n\t\t35\n\t],\n\t\"./information-circle.svg\": [\n\t\t99,\n\t\t36\n\t],\n\t\"./list.svg\": [\n\t\t100,\n\t\t37\n\t],\n\t\"./lock-closed.svg\": [\n\t\t101,\n\t\t38\n\t],\n\t\"./lock-open.svg\": [\n\t\t102,\n\t\t39\n\t],\n\t\"./log-in.svg\": [\n\t\t103,\n\t\t40\n\t],\n\t\"./log-out.svg\": [\n\t\t104,\n\t\t41\n\t],\n\t\"./mail-open.svg\": [\n\t\t105,\n\t\t42\n\t],\n\t\"./mail.svg\": [\n\t\t106,\n\t\t43\n\t],\n\t\"./menu.svg\": [\n\t\t107,\n\t\t44\n\t],\n\t\"./notifications-off.svg\": [\n\t\t108,\n\t\t45\n\t],\n\t\"./notifications.svg\": [\n\t\t109,\n\t\t46\n\t],\n\t\"./paper-plane.svg\": [\n\t\t110,\n\t\t47\n\t],\n\t\"./person-circle.svg\": [\n\t\t111,\n\t\t48\n\t],\n\t\"./pie-chart.svg\": [\n\t\t112,\n\t\t49\n\t],\n\t\"./play-circle.svg\": [\n\t\t113,\n\t\t50\n\t],\n\t\"./print.svg\": [\n\t\t114,\n\t\t51\n\t],\n\t\"./push.svg\": [\n\t\t115,\n\t\t52\n\t],\n\t\"./reload-circle.svg\": [\n\t\t116,\n\t\t53\n\t],\n\t\"./remove-circle.svg\": [\n\t\t117,\n\t\t54\n\t],\n\t\"./send.svg\": [\n\t\t118,\n\t\t55\n\t],\n\t\"./share.svg\": [\n\t\t119,\n\t\t56\n\t],\n\t\"./star-half.svg\": [\n\t\t120,\n\t\t57\n\t],\n\t\"./star-outline.svg\": [\n\t\t121,\n\t\t58\n\t],\n\t\"./star.svg\": [\n\t\t122,\n\t\t59\n\t],\n\t\"./today.svg\": [\n\t\t123,\n\t\t60\n\t],\n\t\"./trash.svg\": [\n\t\t124,\n\t\t61\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 54;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./coffee.svg\": [\n\t\t125,\n\t\t62\n\t],\n\t\"./logo.svg\": [\n\t\t126,\n\t\t63\n\t],\n\t\"./shapex.svg\": [\n\t\t127,\n\t\t64\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 55;\nmodule.exports = webpackAsyncContext;","export const OPEN_MODAL = 'OPEN_MODAL';\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\nexport const SET_PROMPT = 'SET_PROMPT';\nexport const SET_ALERT = 'SET_ALERT';\n\nexport enum PromptType {\n  Success,\n  Error,\n  Info,\n}\nexport interface IPromptState {\n  type: PromptType;\n  duration: number;\n  text: string;\n}\n\nexport interface IAlertState {\n  title: string;\n  text: string;\n  confirm: string;\n  cancel: string;\n  onClick: () => void;\n}\n\nexport interface ILayoutState {\n  modalIsVisible: boolean;\n  modalContent: JSX.Element | null;\n  prompt?: IPromptState;\n  alert?: IAlertState;\n}\n\ninterface ISetPromptAction {\n  type: typeof SET_PROMPT;\n  payload?: IPromptState;\n}\n\n\ninterface ISetAlertAction {\n  type: typeof SET_ALERT;\n  payload?: IAlertState;\n}\n\ninterface IOpenModalAction {\n  type: typeof OPEN_MODAL;\n  payload: JSX.Element;\n}\n\ninterface ICloseModalAction {\n  type: typeof CLOSE_MODAL;\n}\n\nexport type ILayoutActionTypes = IOpenModalAction | ICloseModalAction | ISetPromptAction | ISetAlertAction;\n\nexport interface LayoutActionProps {\n  openModal: (payload: JSX.Element) => ILayoutActionTypes;\n  closeModal: () => ILayoutActionTypes;\n  setPrompt: (payload?: IPromptState) => ILayoutActionTypes;\n  setAlert: (payload?: IAlertState) => ILayoutActionTypes;\n}\n","import { ILayoutState, ILayoutActionTypes, OPEN_MODAL, CLOSE_MODAL, SET_PROMPT, SET_ALERT } from './types';\n\nconst initialState: ILayoutState = {\n  modalIsVisible: false,\n  modalContent: null,\n  prompt: undefined,\n  alert: undefined,\n};\n\nexport function layoutReducer(state = initialState, action: ILayoutActionTypes): ILayoutState {\n  switch (action.type) {\n    case OPEN_MODAL: {\n      return {\n        ...state,\n        modalIsVisible: true,\n        modalContent: action.payload,\n      };\n    }\n    case CLOSE_MODAL: {\n      return {\n        ...state,\n        modalIsVisible: false,\n        modalContent: null,\n      };\n    }\n    case SET_PROMPT: {\n      return {\n        ...state,\n        prompt: action.payload,\n      };\n    }\n    case SET_ALERT: {\n      return {\n        ...state,\n        alert: action.payload,\n      };\n    }\n    default:\n      return state;\n  }\n}\n","export const SET_CLIENT = 'SET_CLIENT';\nexport const SET_CONTRACTOR = 'SET_CONTRACTOR';\n\nexport interface IUserState {\n  clientID?: string;\n  contractorID?: string;\n}\n\ninterface ISetClientAction {\n  type: typeof SET_CLIENT;\n  payload: string;\n}\n\ninterface ISetContractorAction {\n  type: typeof SET_CONTRACTOR;\n  payload: string;\n}\n\nexport type IUserActionTypes = ISetClientAction | ISetContractorAction;\n\nexport interface IUserActionProps {\n  setClient: (payload: string) => IUserActionTypes;\n  setContractor: (payload: string) => IUserActionTypes;\n}\n","import { IUserState, IUserActionTypes, SET_CLIENT, SET_CONTRACTOR } from './types';\n\nconst initialState: IUserState = {\n  clientID: undefined,\n  contractorID: undefined,\n};\n\nexport function userReducer(state = initialState, action: IUserActionTypes): IUserState {\n  switch (action.type) {\n    case SET_CLIENT: {\n      return {\n        ...state,\n        clientID: action.payload,\n      };\n    }\n    case SET_CONTRACTOR: {\n      return {\n        ...state,\n        contractorID: action.payload,\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport { layoutReducer } from './layout/reducers';\nimport { userReducer } from './user/reducers';\n\nexport const rootReducer = combineReducers({\n  layout: layoutReducer,\n  user: userReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import moment from 'moment';\n\nexport enum LogLevel {\n  CRITICAL = 'Critical',\n  ERROR = 'Error',\n  WARN = 'Warning',\n  INFO = 'Information',\n  DEBUG = 'Debug',\n  TRACE = 'Trace',\n}\n\nexport interface ExtraInfo {\n  stackTrace: string;\n  view: string;\n  action: string;\n}\n\nexport interface ILog {\n  message: string;\n  extraInfo?: ExtraInfo;\n  level: LogLevel;\n}\n\nconst logToConsole = (log: ILog): void => {\n  if (log.level === LogLevel.TRACE) {\n    console.trace(log.message, log.extraInfo);\n  } else {\n    console.log(log.message, log.extraInfo);\n  }\n};\n\nconst writeLogEntry = async (log: ILog): Promise<void> => {\n  log.message = `[${log.level}] ${moment().toISOString(true)} ${JSON.stringify(log.message)} `;\n\n  if (process.env.NODE_ENV === 'development') {\n    logToConsole(log);\n  }\n\n  try {\n    // todo log to backend\n  } catch {}\n};\n\nexport function trace(message: string, data?: ExtraInfo): void {\n  writeLogEntry({ level: LogLevel.TRACE, message, extraInfo: data });\n}\n\nexport function debug(message: string, data?: ExtraInfo): void {\n  writeLogEntry({ level: LogLevel.DEBUG, message, extraInfo: data });\n}\n\nexport function info(message: string, data?: ExtraInfo): void {\n  writeLogEntry({ level: LogLevel.INFO, message, extraInfo: data });\n}\n\nexport function warn(message: string, data?: ExtraInfo): void {\n  writeLogEntry({ level: LogLevel.WARN, message, extraInfo: data });\n}\n\nexport function error(message: string, data?: ExtraInfo): void {\n  writeLogEntry({ level: LogLevel.ERROR, message, extraInfo: data });\n}\n\nexport function critical(message: string, data?: ExtraInfo): void {\n  writeLogEntry({ level: LogLevel.CRITICAL, message, extraInfo: data });\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport * as logger from 'src/services/log';\nimport { RootState } from 'src/store';\n\nconst getConfig = (access, method = 'GET') => ({\n  method,\n  headers: { Authorization: 'Token ' + access },\n});\n\nexport const useAssignments = () => {\n  const history = useHistory()\n  const [assignments, setAssignments] = React.useState<any>();\n  const [isLoading, setIsLoading] = React.useState<boolean>(true);\n\n  React.useEffect(() => {\n    const retrieveAssignments = async () => {\n      try {\n        setIsLoading(true);\n        const res = await fetch('/api/assignments');\n        setIsLoading(false);\n        if (res.status === 200) {\n          const data = await res.json();\n          setAssignments(data)\n        } else {\n          logger.error(`GET \"/api/assignments\" `);\n          history.push('/unexpected-error');\n        }\n      } catch (e) {\n        logger.error(`GET \"/api/assignments\" `);\n        history.push('/unexpected-error');\n      }\n    };\n    retrieveAssignments();\n  }, []);\n\n  return { assignments, isLoading };\n};\n\n\nexport const useClientAssignments = (state = 'open') => {\n  const history = useHistory()\n  const [assignments, setAssignments] = React.useState<any>();\n  const [isLoading, setIsLoading] = React.useState<boolean>(true);\n  const { clientID } = useSelector((state: RootState) => state.user);\n\n  React.useEffect(() => {\n    const retrieveAssignments = async () => {\n      try {\n        setIsLoading(true);\n        const res = await fetch(`/api/client/assignments?state=${state}`, getConfig(clientID));\n        setIsLoading(false);\n        if (res.status === 200) {\n          const data = await res.json();\n          setAssignments(data)\n        } else {\n          logger.error(`GET \"/api/client/assignments?state=${state}\" `);\n          history.push('/unexpected-error');\n        }\n      } catch (e) {\n        logger.error(`GET \"/api/client/assignments?state=${state}\" `);\n        history.push('/unexpected-error');\n      }\n    };\n    if (clientID) {\n      retrieveAssignments();\n    }\n  }, [clientID]);\n\n  return { assignments, isLoading };\n};\n\n\nexport const useContractorAssignments = (state = 'assigned') => {\n  const history = useHistory()\n  const [assignments, setAssignments] = React.useState<any>();\n  const [isLoading, setIsLoading] = React.useState<boolean>(true);\n  const { contractorID } = useSelector((state: RootState) => state.user);\n\n  React.useEffect(() => {\n    const retrieveAssignments = async () => {\n      try {\n        setIsLoading(true);\n        const res = await fetch(`/api/contractor/assignments?state=${state}`, getConfig(contractorID));\n        setIsLoading(false);\n        if (res.status === 200) {\n          const data = await res.json();\n          setAssignments(data)\n        } else {\n          logger.error(`GET \"/api/contractor/assignments?state=${state}\" `);\n          history.push('/unexpected-error');\n        }\n      } catch (e) {\n        logger.error(`GET \"/api/contractor/assignments?state=${state}\" `);\n        history.push('/unexpected-error');\n      }\n    };\n    if (contractorID) {\n      retrieveAssignments();\n    }\n  }, [contractorID]);\n\n  return { assignments, isLoading };\n};\n","import { OPEN_MODAL, CLOSE_MODAL, SET_PROMPT, ILayoutActionTypes, IPromptState, IAlertState, SET_ALERT } from './types';\n\nexport function openModal(content: JSX.Element): ILayoutActionTypes {\n  return {\n    type: OPEN_MODAL,\n    payload: content,\n  };\n}\n\nexport function closeModal(): ILayoutActionTypes {\n  return { type: CLOSE_MODAL };\n}\n\nexport function setPrompt(prompt?: IPromptState): ILayoutActionTypes {\n  console.log('Prompt:')\n  console.log(prompt)\n  return {\n    type: SET_PROMPT,\n    payload: prompt,\n  }\n}\n\n\nexport function setAlert(alert?: IAlertState): ILayoutActionTypes {\n  console.log('Alert:')\n  console.log(alert)\n  return {\n    type: SET_ALERT,\n    payload: alert,\n  }\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface ContainerProps {\n  style?: string;\n  children?: React.ReactNode;\n  className?: string;\n}\n\nconst StyledContainer = styled.div<ContainerProps>`\n  /* widescreen */\n  @media (min-width: 2560px) {\n    padding: 0 var(--margin-g);\n  }\n\n  /* default */\n  padding: 0 var(--margin-xxl);\n\n  /* mobile */\n  @media (max-width: 540px) {\n    padding: 0 var(--margin-m);\n  }\n`;\n\nexport const Container = React.forwardRef((props: ContainerProps, ref: React.Ref<any>) => (\n  <StyledContainer style={props.style} className={props.className} ref={ref}>\n    {props.children}\n  </StyledContainer>\n));\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface DividerProps {\n  className?: string;\n}\n\nconst StyledDivider = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 1px;\n  background-color: var(--color-grey-light);\n`;\n\nexport const Divider: React.FC<DividerProps> = ({ className }) => <StyledDivider className={className} />;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface CheckboxProps {\n  className?: string;\n  checked: boolean;\n  onClick: any;\n}\n\ninterface StyleProps {\n  checked: boolean;\n}\n\nconst CheckboxContainer = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n`;\n\nconst Icon = styled.svg`\n  fill: none;\n  stroke: white;\n  stroke-width: 2px;\n`;\n\nconst HiddenCheckbox = styled.input.attrs({ type: 'checkbox' })`\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n`;\n\nconst StyledCheckbox = styled.div<StyleProps>`\n  display: inline-block;\n  width: 16pt;\n  height: 16pt;\n  background: ${({ checked }) => (checked ? 'var(--color-grey-dark)' : 'rgba(var(--color-blue-rgb),0.2)')};\n  border-radius: 3px;\n  transition: all 150ms;\n\n  ${HiddenCheckbox}:focus + & {\n    box-shadow: 0 0 0 3px pink;\n  }\n\n  ${Icon} {\n    visibility: ${({ checked }) => (checked ? 'visible' : 'hidden')};\n  }\n`;\n\nexport const Checkbox: React.FC<CheckboxProps> = ({ className, checked, onClick }) => (\n  <CheckboxContainer className={className} onClick={() => onClick(!checked)}>\n    <HiddenCheckbox checked={checked} />\n    <StyledCheckbox checked={checked}>\n      <Icon viewBox=\"0 0 24 24\">\n        <polyline points=\"20 6 9 17 4 12\" strokeLinecap=\"round\" />\n      </Icon>\n    </StyledCheckbox>\n  </CheckboxContainer>\n);\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface InputProps {\n  value: string;\n  label: string;\n  error?: string;\n  type?: 'email' | 'password' | 'text' | 'date';\n  className?: string;\n  onChange?: (text: string) => string | void;\n  onFocus?: () => void;\n  onBlur?: () => void;\n  setRef?: any;\n}\n\ninterface StyleProps {\n  error?: string;\n  focused?: boolean;\n}\n\nconst InputContainer = styled.div<StyleProps>`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n\n  & > input {\n    border: 0.5pt solid ${({ error }) => (error ? 'var(--color-red)' : 'var(--color-border-light)')};\n    border-radius: var(--border-radius-s);\n    background-color: transparent;\n    color: var(--color-text-light);\n    \n    outline: none;\n    padding: var(--margin-r) var(--margin-r) var(--margin-r) var(--margin-m);\n    font-size: var(--font-size-m);\n    transition: all 0.2s ease;\n    z-index: 1;\n  }\n  & > label {\n    color: var(--color-text-dark);\n    font-weight: 600;\n    position: absolute;\n    top: 15px;\n    left: 15px;\n    transition: all 0.2s ease;\n    z-index: 1;\n\n    ${(props) =>\n    props.focused &&\n    `\n      font-size: var(--font-size-s);\n      transform: translateY(-35px) translateX(-3px);\n      z-index: 2;\n      padding: 0 8px;\n    `}\n  }\n`;\n\nexport const Input: React.FC<InputProps> = ({\n  value,\n  type,\n  label,\n  onChange,\n  onFocus,\n  error,\n  onBlur,\n  setRef,\n  className,\n  ...props\n}) => {\n  const [focused, setFocused] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    if (value.length > 0) {\n      setFocused(true)\n    }\n  }, [])\n\n  const handleOnFocus = () => {\n    setFocused(true);\n    if (onFocus !== undefined) {\n      onFocus();\n    }\n  };\n\n  const handleOnBlur = () => {\n    if (!value) {\n      setFocused(false);\n      if (onBlur !== undefined) {\n        onBlur();\n      }\n    }\n  };\n\n  const handleOnChange = (val) => {\n    if (onChange !== undefined) onChange(val);\n    if (val && !focused) handleOnFocus()\n  };\n\n  const renderLabel = () => {\n    if (label) {\n      // if we have an error\n      if (error) {\n        return <label>{error}</label>;\n      }\n      return <label>{label}</label>;\n    }\n    return null;\n  };\n\n  const isFocused = focused || String(value).length || type === 'date';\n\n  return (\n    <InputContainer focused={focused} error={error} className={className}>\n      {renderLabel()}\n      <input\n        value={value}\n        type={type}\n        onChange={(e) => handleOnChange(e.target.value)}\n        onFocus={handleOnFocus}\n        onBlur={handleOnBlur}\n        ref={(ref) => setRef(ref)}\n        {...props}\n      />\n    </InputContainer>\n  );\n};\n\nInput.defaultProps = {\n  type: 'text',\n  label: 'Hello World',\n  error: '',\n  onFocus: () => null,\n  onBlur: () => null,\n  setRef: () => null,\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport type ButtonComponentProps = {\n  children?: HTMLCollection | string | JSX.Element;\n  onClick: (e?: React.MouseEvent) => void;\n} & React.ButtonHTMLAttributes<HTMLButtonElement>;\n\nconst StyledButton = styled.button<ButtonComponentProps>`\n  padding: 0 14pt;\n  color: var(--color-bg-dark);\n  font-size: var(--font-size-r);\n  height: 38pt;\n  font-weight: 600;\n  background-color: var(--color-green);\n  border: none;\n  border-radius: 19pt;\n  appearance: none;\n  cursor: pointer;\n  :focus {\n    outline: none;\n  }\n`;\n\nexport const Button = ({ onClick, children, ...props }: ButtonComponentProps) => {\n  return (\n    <StyledButton onClick={onClick} {...props}>\n      {children}\n    </StyledButton>\n  );\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\n\ninterface IconProps extends React.SVGProps<SVGSVGElement> {\n  name: string;\n  className?: string;\n  height?: string;\n  width?: string;\n  size?: string;\n  onClick?: any;\n}\n\ninterface StyleProps {\n  height?: string;\n  width?: string;\n  size?: string;\n}\n\nconst Container = styled.div<StyleProps>`\n  display: block;\n  height: ${({ height, size }) => (size ? size : height)};\n  width: ${({ width, size }) => (size ? size : width)};\n  svg {\n    height: ${({ height, size }) => (size ? size : height)};\n    width: ${({ width, size }) => (size ? size : width)};\n  }\n`;\n\nexport const Icon: React.FC<IconProps> = ({ name, color, size, width, height, className, onClick }): JSX.Element => {\n  const ImportedIconRef = useRef<React.FC<React.SVGProps<SVGSVGElement>> | any>();\n  const [loading, setLoading] = useState(false);\n\n  useEffect((): void => {\n    setLoading(true);\n    const importIcon = async (): Promise<void> => {\n      try {\n        // Changing this line works fine to me\n        ImportedIconRef.current = (await import(`!!@svgr/webpack?-svgo,+titleProp,+ref!./svg/${name}.svg`)).default;\n      } catch (err) {\n        throw err;\n      } finally {\n        setLoading(false);\n      }\n    };\n    importIcon();\n  }, [name]);\n\n  if (!loading && ImportedIconRef.current) {\n    const { current: ImportedIcon } = ImportedIconRef;\n    return (\n      <Container color={color} size={size} width={width} height={height} onClick={onClick} className={className}>\n        <ImportedIcon />\n      </Container>\n    );\n  }\n  return <div />;\n};\n\nIcon.defaultProps = {\n  height: '24pt',\n  width: '24pt',\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\n\ninterface VectorProps extends React.SVGProps<SVGSVGElement> {\n  name: string;\n  height?: string;\n  width?: string;\n}\n\ninterface StyleProps {\n  height?: string;\n  width?: string;\n}\n\nconst Container = styled.div<StyleProps>`\n  svg {\n    height: ${({ height }) => (height ? height : undefined)};\n    width: ${({ width }) => (width ? width : undefined)};\n  }\n`;\n\nexport const VectorGraphic: React.FC<VectorProps> = ({ name, width, height, className }): JSX.Element | null => {\n  const ImportedIconRef = useRef<React.FC<React.SVGProps<SVGSVGElement>> | any>();\n  const [loading, setLoading] = useState<boolean>(false);\n\n  useEffect((): void => {\n    setLoading(true);\n    const importIcon = async (): Promise<void> => {\n      try {\n        // Changing this line works fine to me\n        ImportedIconRef.current = (await import(`!!@svgr/webpack?-svgo,+titleProp,+ref!./svg/${name}.svg`)).default;\n      } catch (err) {\n        throw err;\n      } finally {\n        setLoading(false);\n      }\n    };\n    importIcon();\n  }, [name]);\n\n  if (!loading && ImportedIconRef.current) {\n    const { current: ImportedIcon } = ImportedIconRef;\n    return (\n      <Container width={width} height={height} className={className}>\n        <ImportedIcon />\n      </Container>\n    );\n  }\n  return null;\n};\n","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\ninterface BarProps {\n  rgb?: string;\n  percentage?: string;\n}\n\nconst Container = styled.div<BarProps>`\n  display: flex;\n  background-color: ${({ rgb }) => `rgba(${rgb}, 0.2)`};\n  height: 0.8rem;\n  border-radius: 0.4rem;\n  overflow: hidden;\n`;\n\nconst barAnimation = (percentage) => keyframes`\n    from { width: 0%; }\n    to { width: ${percentage} }\n`;\n\nconst StyledBar = styled.div<BarProps>`\n  display: block;\n  width: 0%;\n  background-color: ${({ rgb }) => `rgb(${rgb})`};\n  border-radius: 0.4rem;\n  animation-duration: 1s;\n  animation-delay: 1s;\n  animation-fill-mode: forwards;\n  animation-name: ${({ percentage }) => barAnimation(percentage)};\n`;\n\nexport const Bar: React.FC<BarProps> = ({ rgb, percentage }) => {\n  return (\n    <Container rgb={rgb}>\n      <StyledBar rgb={rgb} percentage={percentage} />\n    </Container>\n  );\n};\n\nBar.defaultProps = {\n  rgb: 'var(--color-blue-rgb)',\n  percentage: '0%',\n};\n","import styled from 'styled-components';\nimport { Button, Icon } from 'src/components';\n\ninterface IPrimaryButton {\n    active: boolean;\n}\n\nexport const Container = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    min-height: 300px;\n    border-radius: var(--border-radius-l);\n    padding: var(--margin-l) var(--margin-m);\n    background-color: var(--color-bg-light);\n    z-index: 2;\n`\n\nexport const Title = styled.h5`\n    max-width: 90%;\n    font-weight: 600;\n    font-size: 1.1rem;\n    color: var(--color-text-light);\n    margin-bottom: var(--margin-r);\n`\n\nexport const CompensationRow = styled.div`\n    display: flex;\n    align-items: flex-end;\n`\n\nexport const Compensation = styled.h1`\n    font-weight: 700;\n    font-size: 3rem;\n    color: var(--color-text-light);\n`\n\nexport const CompensationCurrency = styled.p`\n    font-weight: 600;\n    font-size: 1.2rem;\n    color: var(--color-text-light);\n    margin-left: var(--margin-s);\n    margin-bottom: 6pt;\n`\n\nexport const Divider = styled.div`\n  height: 1px;\n  background-color: var(--color-text-light);\n  opacity: 80%;\n  width: 100%;\n  margin-bottom: var(--margin-s);\n`\n\nexport const Label = styled.p`\n    font-weight: 600;\n    font-size: 0.8rem;\n    color: var(--color-text-dark);\n    margin-bottom: var(--margin-s);\n    text-align: right;\n`\n\nexport const Number = styled.h3`\n    font-weight: 700;\n    font-size: 1.6rem;\n    color: var(--color-text-light);\n    margin-bottom: var(--margin-s);\n`\n\nexport const NotesLabel = styled.p`\n    font-weight: 500;\n    font-size: 1rem;\n    color: var(--color-text-light);\n    margin: var(--margin-s) 0;\n`\n\nexport const Notes = styled.p`\n    font-weight: 400;\n    font-size: 0.9rem;\n    line-height: 1.2rem;\n    font-family: sans-serif, 'Montserrat';\n    color: var(--color-text-light);\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n`\n\nexport const ButtonRow = styled.div`\n    display: flex;\n    justify-content: space-between;\n    margin-top: var(--margin-l);\n    a {\n        width: 47%;\n    }\n`\n\nexport const PrimaryButton = styled(Button) <IPrimaryButton>`\n  background-color: ${({ active }) => active ? \"var(--color-text-light)\" : \"var(--color-bg-light)\"};\n  width: 47%;\n`\n\nexport const SecondaryButton = styled(Button)`\n  background-color: transparent;\n  border: 2px solid var(--color-text-light);\n  color: var(--color-text-light);\n  width: 100%;\n`\n\nexport const StyledIcon = styled(Icon)`\n    position: absolute;\n    top: var(--margin-l);\n    right: var(--margin-m);\n    cursor: pointer;\n    svg {\n        fill: var(--color-text-light);\n    }\n`;\n","const isIn = (str1: string, str2: string): boolean => {\n    return str1.toLowerCase().includes(str2.toLowerCase())\n}\n\nexport const getCurrency = (str: string): string => {\n    if (isIn(str, 'EUR')) {\n        return '€'\n    }\n    if (isIn(str, 'USD') || isIn(str, 'Dollar')) {\n        return '$'\n    }\n    if (isIn(str, 'GBP') || isIn(str, 'Pound')) {\n        return '£'\n    }\n    return '€'\n}","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n// store\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from 'src/store';\n// components\nimport {\n    Container,\n    Title,\n    Compensation,\n    CompensationRow,\n    CompensationCurrency,\n    Divider,\n    Label,\n    Number,\n    NotesLabel,\n    Notes,\n    ButtonRow,\n    PrimaryButton,\n    SecondaryButton,\n    StyledIcon\n} from './assignment-item.style';\nimport { getCurrency } from 'src/services/currency';\nimport { setAlert, setPrompt } from 'src/store/layout/actions';\nimport { PromptType } from 'src/store/layout/types';\n\ninterface IAssignmentItem {\n    item: any\n}\n\nexport const AssignmentItem: React.FC<IAssignmentItem> = ({ item }) => {\n    const dispatch = useDispatch();\n    const [isActive, setIsActive] = React.useState(true);\n    const [isOwner, setIsOwner] = React.useState(false);\n    const { t } = useTranslation();\n    const { clientID, contractorID } = useSelector((state: RootState) => state.user);\n\n    React.useEffect(() => {\n        if (item.client.$oid === clientID) {\n            setIsOwner(true)\n        }\n        if (contractorID) {\n            item.applicants.forEach(applicant => {\n                if (applicant.$oid === contractorID) {\n                    setIsActive(false);\n                }\n            })\n        }\n    }, [])\n\n    const onClickApply = async () => {\n        if (!isActive) return\n        const res = await fetch(`/api/assignment/${item._id.$oid}/apply`, {\n            method: 'GET',\n            headers: {\n                Authorization: `Token ${contractorID}`\n            },\n        })\n        if (res.status === 204) {\n            setIsActive(false)\n            dispatch(setPrompt({\n                type: PromptType.Success,\n                duration: 4000,\n                text: t('messages.applicationCreatedSccessfully'),\n            }))\n        } else {\n            dispatch(setPrompt({\n                type: PromptType.Error,\n                duration: 4000,\n                text: t('error.unexpectedErrorText'),\n            }))\n        }\n    }\n\n    const onClickRemove = async () => {\n        const deleteAssignemt = async () => {\n            const res = await fetch(`/api/assignment/${item._id.$oid}`, {\n                method: 'DELETE',\n                headers: {\n                    Authorization: `Token ${clientID}`\n                },\n            });\n            if (res.status === 204) {\n                dispatch(setPrompt({\n                    type: PromptType.Success,\n                    duration: 4000,\n                    text: t('messages.assignmentDeletedSuccessfully'),\n                }))\n            } else if (res.status === 401) {\n                dispatch(setPrompt({\n                    type: PromptType.Error,\n                    duration: 4000,\n                    text: t('error.unauthorized'),\n                }))\n            } else {\n                dispatch(setPrompt({\n                    type: PromptType.Error,\n                    duration: 4000,\n                    text: t('error.unexpectedErrorText'),\n                }))\n            }\n        }\n\n        dispatch(setAlert({\n            title: t('alert.deleteAssignmentTitle'),\n            text: t('alert.deleteAssignmentText'),\n            confirm: t('common.delete'),\n            cancel: t('common.cancel'),\n            onClick: deleteAssignemt,\n        }))\n    }\n\n    return (\n        <Container>\n            <div>\n                <Title>\n                    {item.title}\n                </Title>\n                <CompensationRow>\n                    <Compensation>\n                        {item.compensation}\n                    </Compensation>\n                    <CompensationCurrency>\n                        {getCurrency(item.currency)}\n                    </CompensationCurrency>\n                </CompensationRow>\n                <Divider />\n                <Label>{t('common.compensation').toUpperCase()}</Label>\n                <Number>{item.applicants.length}</Number>\n                <Divider />\n                <Label>{t('common.applicants').toUpperCase()}</Label>\n                <Number>{item.comments.length}</Number>\n                <Divider />\n                <Label>{t('common.comments').toUpperCase()}</Label>\n                {item.notes !== undefined && (\n                    <>\n                        <NotesLabel>\n                            {t('common.notes') + \":\"}\n                        </NotesLabel>\n                        <Notes>\n                            {item.notes}\n                        </Notes>\n                    </>\n                )}\n            </div>\n            {contractorID != undefined && (\n                <ButtonRow>\n                    <a href={`https://cuborr.com/api/assignment/download/${item.file}`} download>\n                        <SecondaryButton onClick={() => null}>{t('common.download')}</SecondaryButton>\n                    </a>\n                    <PrimaryButton active={isActive} onClick={onClickApply}>{t('common.apply')}</PrimaryButton>\n                </ButtonRow>\n            )}\n            {isOwner && <StyledIcon name=\"close\" onClick={onClickRemove} size=\"18pt\" />}\n        </Container>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { Container, VectorGraphic } from 'src/components';\n\nconst StyledContainer = styled(Container)`\n    padding-top: 100pt;\n`;\n\nconst StyledLinksGrid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-column-gap: var(--margin-m);\n    margin-bottom: 60pt;\n`\n\nconst GridColumn = styled.div`\n    display: grid;\n    flex-direction: column;\n    align-self: flex-start;\n`\n\nconst LinkTitle = styled.p`\n    font-weight: 700;\n    font-size: 1rem;\n    color: var(--color-text-light);\n    margin-bottom: var(--margin-m);\n    @media (max-width: 780px) {\n        font-size: 0.8rem;\n    }\n`\n\nconst StyledLink = styled(Link)`\n    font-weight: 500;\n    font-size: 1rem;\n    color: var(--color-text-dark);\n    margin-bottom: var(--margin-l);\n    @media (max-width: 780px) {\n        font-size: 0.8rem;\n    }\n`\n\nconst StyledExternalLink = styled.a`\n    font-weight: 500;\n    font-size: 1rem;\n    color: var(--color-text-dark);\n    margin-bottom: var(--margin-l);\n    @media (max-width: 780px) {\n        font-size: 0.8rem;\n    }\n`\n\nconst Row = styled.div`\n    display: flex;\n    flex: 1;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 35pt;\n`\n\nconst CopyrightRow = styled.div`\n    display: flex;\n    align-items: center;\n`\n\nconst Logo = styled(VectorGraphic)`\n    margin-right: 5pt;\n`\n\nconst Copyright = styled.p`\n    font-weight: 400;\n    font-size: 0.9rem;\n    color: var(--color-text-light);\n    @media (max-width: 780px) {\n        font-size: 0.8rem;\n    }\n`\n\nconst StyledVector = styled(VectorGraphic)`\n    width: 22pt;\n`\n\nconst Note = styled.p`\n    font-weight: 400;\n    font-size: 0.8rem;\n    color: var(--color-text-dark);\n    line-height: 1.2rem;\n    @media (max-width: 780px) {\n        font-size: 0.7rem;\n        line-height: 1.1rem;\n    }\n`\n\nconst DonateRow = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: var(--margin-xxl) 0;\n`\n\nconst DonateText = styled.a`\n    font-weight: 500;\n    font-size: 1rem;\n    color: var(--color-text-light);\n    margin-top: var(--margin-s);\n    cursor: pointer;\n`\n\nexport const Footer = () => {\n    const { t } = useTranslation();\n    return (\n        <StyledContainer>\n            <StyledLinksGrid>\n                <GridColumn>\n                    <LinkTitle>{t('footer.legal')}</LinkTitle>\n                    <StyledExternalLink\n                        target=\"_blank\"\n                        href=\"/company-details\">\n                        {t('footer.companyDetails')}\n                    </StyledExternalLink>\n                    <StyledExternalLink\n                        target=\"_blank\"\n                        href=\"/privacy-policy\">\n                        {t('footer.privacyPolicy')}\n                    </StyledExternalLink>\n                    <StyledExternalLink\n                        target=\"_blank\"\n                        href=\"/terms-and-conditions\">\n                        {t('footer.termsAndConditions')}\n                    </StyledExternalLink>\n                </GridColumn>\n                <GridColumn>\n                    <LinkTitle>{t('footer.founders')}</LinkTitle>\n                    <StyledLink>Nico Müller</StyledLink>\n                    <StyledExternalLink\n                        target=\"_blank\"\n                        href=\"https://de.linkedin.com/in/felixgebert\">\n                        Felix Gebert\n                    </StyledExternalLink>\n                    <StyledExternalLink\n                        target=\"_blank\"\n                        href=\"https://de.linkedin.com/in/konstantin-paulus-a0259717a\">\n                        Konstantin Paulus\n                    </StyledExternalLink>\n                </GridColumn>\n                <GridColumn>\n                    <LinkTitle>{t('footer.external')}</LinkTitle>\n                    <StyledExternalLink\n                        target=\"_blank\"\n                        href=\"https://www.instagram.com/cuborr_com\">\n                        Instagram\n                    </StyledExternalLink>\n                    <StyledExternalLink\n                        target=\"_blank\"\n                        href=\"https://github.com/cuborr/cuborr\">\n                        GitHub\n                    </StyledExternalLink>\n                    <StyledExternalLink\n                        target=\"_blank\"\n                        href=\"https://www.linkedin.com/company/cuborr\">\n                        LinkedIn\n                    </StyledExternalLink>\n                </GridColumn>\n            </StyledLinksGrid>\n            <Row>\n                <CopyrightRow>\n                    <Logo name=\"logo\">CUBORR</Logo>\n                    <Copyright>© 2021 Paulus K., Gebert F., Müller N.</Copyright>\n                </CopyrightRow>\n                <StyledVector name=\"shapex\" height=\"20pt\" />\n            </Row>\n            <Note>{t('footer.note')}</Note>\n            <DonateRow>\n                <VectorGraphic name=\"coffee\" />\n                <DonateText\n                    target=\"_blank\"\n                    href=\"https://ko-fi.com/cuborr\"\n                >\n                    {t('footer.donate')}\n                </DonateText>\n            </DonateRow>\n        </StyledContainer>\n    );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  animation-name: animatebottom;\n  animation-duration: 0.3s;\n\n  @keyframes animatebottom {\n    from {\n      top: 60%;\n      opacity: 0;\n    }\n    to {\n      top: 50%;\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Wrapper = styled.div`\n    background-color: var(--color-bg-light);\n    border-radius: var(--border-radius-m);\n    border: 1.5px solid #FFFFFF11;\n    padding: var(--margin-l) var(--margin-l);\n    box-shadow: 0px 0px 20px #00000099;\n    width: 70vw;\n    max-width: 450pt;\n`;\n\n\nexport const FormGrid = styled.div`\n    display: grid;\n    width: 100%;\n    grid-template-columns: 1fr;\n    grid-column-gap: var(--margin-l);\n    grid-row-gap: var(--margin-l);\n`;\n\nexport const Title = styled.div`\n    font-size: 1.5rem;\n    font-weight: 700;\n    color: var(--color-text-light);\n    margin-bottom: var(--margin-r);\n`\n\nexport const ButtonContainer = styled.div`\n    margin-top: var(--margin-m);\n    display: flex;\n    flex: 1;\n    justify-content: flex-end;\n`\n","import React from 'react';\nimport styled from 'styled-components';\n\n\nexport interface IIndexIndicator {\n    index: number;\n}\n\ninterface IDot {\n    active: boolean;\n}\n\nconst Container = styled.div`\n  position: fixed;\n  top: 5%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nconst Wrapper = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nconst Dot = styled.div<IDot>`\n    height: 10pt;\n    width: 10pt;\n    border-radius: 50%;\n    border: 1.5px solid var(--color-border-light);\n    background-color: ${({ active }) => active ? 'var(--color-border-light)' : undefined};\n`;\n\nconst Bar = styled.div`\n    height: 3pt;\n    width: 15pt;\n    border-radius: 1.5pt;\n    margin: 0 5pt;\n    background-color: var(--color-border-light);\n`;\n\nexport const IndexIndicator: React.FC<IIndexIndicator> = ({ index }) => {\n    return (\n        <Container>\n            <Wrapper>\n                <Dot active={true} />\n                <Bar />\n                <Dot active={index >= 1} />\n                <Bar />\n                <Dot active={index >= 2} />\n            </Wrapper>\n        </Container>\n    );\n};\n","import { SET_CLIENT, SET_CONTRACTOR, IUserActionTypes } from './types';\n\nexport function setClient(id): IUserActionTypes {\n  return {\n    type: SET_CLIENT,\n    payload: id,\n  };\n}\n\nexport function setContractor(id): IUserActionTypes {\n  return {\n    type: SET_CONTRACTOR,\n    payload: id,\n  };\n}\n","import React from 'react';\nimport { Button, Input } from 'src/components';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\nimport {\n    Container,\n    Wrapper,\n    FormGrid,\n    ButtonContainer,\n    Title,\n} from './contractor-form.style';\nimport { IndexIndicator } from './components/index-indicator';\nimport { closeModal, setPrompt } from 'src/store/layout/actions';\nimport { PromptType } from 'src/store/layout/types';\nimport { setContractor } from 'src/store/user/actions';\n\n\nexport const ContractorForm: React.FC = () => {\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n    const [formIndex, setFormIndex] = React.useState<number>(0)\n\n    // name\n    const [firstName, setFirstName] = React.useState<string>(\"\")\n    const [lastName, setLastName] = React.useState<string>(\"\")\n    const [country, setCountry] = React.useState<string>(\"Deutschland\")\n\n    // printer\n    const [printerName, setPrinterName] = React.useState<string>(\"\")\n    const [itemNumber, setItemNumber] = React.useState<string>(\"\")\n    const [material, setMaterial] = React.useState<string>(t('contractor.commonFilaments'))\n\n    // contact\n    const [email, setEmail] = React.useState<string>(\"\")\n    const [phoneNumber, setPhoneNumber] = React.useState<string>(\"\")\n\n\n    const incrementFrom = () => {\n        if (formIndex === 0 && firstName && lastName && country) {\n            setFormIndex(formIndex + 1)\n        } else if (formIndex === 1 && printerName && itemNumber && material) {\n            setFormIndex(formIndex + 1)\n        }\n    }\n\n    const renderNextButton = () => (\n        <ButtonContainer>\n            <Button onClick={incrementFrom}>{t(\"common.next\")}</Button>\n        </ButtonContainer>\n    )\n\n    const onClickSubmit = async () => {\n        if (!phoneNumber || !email) return\n        const res = await fetch('/api/contractor', {\n            method: 'POST',\n            body: JSON.stringify({\n                firstName,\n                lastName,\n                country,\n                printerName,\n                itemNumber,\n                material,\n                email,\n                phoneNumber\n            })\n        })\n\n        console.log('Response:')\n        console.log(res)\n\n        if (res.status === 201) {\n            const data = await res.json()\n            console.log(data._id.$oid)\n            localStorage.setItem('contractor_id', data._id.$oid);\n            dispatch(setContractor(data._id.$oid))\n            dispatch(setPrompt({\n                type: PromptType.Success,\n                duration: 7000,\n                text: t('messages.contractorCreatedSucessfully'),\n            }))\n        } else {\n            dispatch(setPrompt({\n                type: PromptType.Error,\n                duration: 4000,\n                text: t('error.unexpectedErrorText'),\n            }))\n        }\n        dispatch(closeModal());\n    }\n\n    return (\n        <>\n            <IndexIndicator index={formIndex} />\n            {\n                formIndex === 0 && (\n                    <Container>\n                        <Title>{t(\"contractor.nameTitle\")}</Title>\n                        <Wrapper>\n                            <FormGrid>\n                                <Input value={firstName} label={t(\"common.firstName\")} onChange={setFirstName} />\n                                <Input value={lastName} label={t(\"common.lastName\")} onChange={setLastName} />\n                                <Input value={country} label={t(\"common.country\")} onChange={setCountry} />\n                            </FormGrid>\n                        </Wrapper>\n                        {renderNextButton()}\n                    </Container>\n                )\n            }\n            {\n                formIndex === 1 && (\n                    <Container>\n                        <Title>{t(\"contractor.printerTitle\")}</Title>\n                        <Wrapper>\n                            <FormGrid>\n                                <Input value={printerName} label={t(\"common.printerName\")} onChange={setPrinterName} />\n                                <Input value={itemNumber} label={t(\"common.itemNumber\")} onChange={setItemNumber} />\n                                <Input value={material} label={t(\"common.materials\")} onChange={setMaterial} />\n                            </FormGrid>\n                        </Wrapper>\n                        {renderNextButton()}\n                    </Container>\n                )\n            }\n            {\n                formIndex === 2 && (\n                    <Container>\n                        <Title>{t(\"contractor.contactTitle\")}</Title>\n                        <Wrapper>\n                            <FormGrid>\n                                <Input value={phoneNumber} label={t(\"common.phoneNumber\")} onChange={setPhoneNumber} />\n                                <Input value={email} label={t(\"common.email\")} onChange={setEmail} />\n                            </FormGrid>\n                        </Wrapper>\n                        <ButtonContainer>\n                            <Button onClick={onClickSubmit}>{t(\"common.submit\")}</Button>\n                        </ButtonContainer>\n                    </Container>\n                )\n            }\n        </>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n// assets\nimport { Icon } from 'src/components';\n// store\nimport { useSelector } from 'react-redux';\nimport { RootState } from 'src/store';\n\nconst Container = styled(Link)`\n    position: relative;\n    display: flex;\n    width: 30pt;\n    height: 30pt;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst StyledIcon = styled(Icon)`\n  svg {\n    fill: var(--color-text-light);\n  }\n`;\n\nconst Circle = styled.div`\n    position: absolute;\n    top: 0;\n    right: 0;\n    background-color: var(--color-green);\n    display: flex;\n    padding: 2pt;\n    min-width: 14px;\n    border-radius: 8pt;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst Text = styled.p`\n    font-size: 8pt;\n    font-weight: 500;\n    color: var(--color-bg-dark);\n`\nexport const ClientIcon: React.FC = () => {\n    const { clientID } = useSelector((state: RootState) => state.user);\n    const [count, setCount] = React.useState(0);\n    React.useEffect(() => {\n        const retrieveAssignmentCount = async () => {\n            const res = await fetch(`/api/client/assignments?type=count`, {\n                method: 'GET',\n                headers: { Authorization: `Token ${clientID}` }\n            });\n            if(res.status === 200) {\n                const data = await res.json()\n                setCount(data.count)\n            }\n        }\n        retrieveAssignmentCount()\n    })\n\n    return (\n        <Container to=\"beta/client/assignments\">\n            <StyledIcon name=\"print\" size=\"18pt\" />\n            {\n                count > 0 && (\n                    <Circle>\n                        <Text>{count}</Text>\n                    </Circle>\n                )\n            }\n        </Container>\n    )\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n// assets\nimport { Icon } from 'src/components';\n// store\nimport { useSelector } from 'react-redux';\nimport { RootState } from 'src/store';\n\nconst Container = styled(Link)`\n    position: relative;\n    display: flex;\n    width: 30pt;\n    height: 30pt;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst StyledIcon = styled(Icon)`\n  svg {\n    fill: var(--color-text-light);\n  }\n`;\n\nconst Circle = styled.div`\n    position: absolute;\n    top: 0;\n    right: 0;\n    background-color: var(--color-green);\n    display: flex;\n    padding: 2pt;\n    min-width: 14px;\n    border-radius: 8pt;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst Text = styled.p`\n    font-size: 8pt;\n    font-weight: 500;\n    color: var(--color-bg-dark);\n`\nexport const ContractorIcon: React.FC = () => {\n    const { contractorID } = useSelector((state: RootState) => state.user);\n    const [count, setCount] = React.useState(0);\n\n    React.useEffect(() => {\n        const retrieveAssignmentCount = async () => {\n            const res = await fetch(`/api/contractor/assignments?type=count`, {\n                method: 'GET',\n                headers: { Authorization: `Token ${contractorID}` }\n            });\n            if (res.status === 200) {\n                const data = await res.json()\n                setCount(data.count)\n            }\n        }\n        retrieveAssignmentCount()\n    })\n\n    return (\n        <Container to=\"beta/contractor/assignments\">\n            <StyledIcon name=\"clipboard\" size=\"18pt\" />\n            {\n                count > 0 && (\n                    <Circle>\n                        <Text>{count}</Text>\n                    </Circle>\n                )\n            }\n        </Container>\n    )\n};\n","import styled from 'styled-components';\nimport { Container } from 'src/components';\n\nexport const RelativeContainer = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nexport const NavbarContainer = styled.nav`\n  height: var(--navbar-height);\n  width: 100%;\n`\n\nexport const StyledNavContainer = styled(Container)`\n  display: flex;\n  flex: 1;\n  justify-content: space-between;\n  align-items: center;\n  height: 100%;\n`\n\nexport const NavLink = styled.p`\n  font-size: 1rem;\n  color: var(--color-text-light);\n  font-weight: 600;\n  margin: 0 5px;\n  cursor: pointer;\n  z-index: 1;\n  @media (max-width: 490px) {\n    font-size: 0.7rem;\n  }\n`\n\nexport const NavRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1rem;\n  color: var(--color-text-light);\n  font-weight: 400;\n  z-index: 1;\n  @media (max-width: 490px) {\n    font-size: 0.7rem;\n  }\n`\n\nexport const NavAbsolutContainer = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  height: 50pt;\n  top: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n// store\nimport { useDispatch, useSelector } from 'react-redux';\nimport { openModal } from 'src/store/layout/actions';\nimport { RootState } from 'src/store';\n// components\nimport { VectorGraphic } from 'src/components';\nimport { ContractorForm, ClientIcon, ContractorIcon } from './components';\nimport { Link } from 'react-router-dom';\nimport {\n    NavbarContainer,\n    StyledNavContainer,\n    NavLink,\n    NavRow,\n    NavAbsolutContainer,\n    RelativeContainer\n} from './navbar.styles';\n\n\nexport const Navbar: React.FC = () => {\n    const { t, i18n } = useTranslation();\n    const dispatch = useDispatch();\n    const { clientID, contractorID } = useSelector((state: RootState) => state.user);\n    const onClickRegisterPrinter = () => dispatch(openModal(<ContractorForm />));\n\n    const onChangeLanguage = () => {\n        if (i18n.language === 'de') {\n            i18n.changeLanguage('en')\n        } else {\n            i18n.changeLanguage('de')\n        }\n    }\n\n    return (\n        <NavbarContainer>\n            <RelativeContainer>\n                <NavAbsolutContainer>\n                    <Link to=\"/beta\">\n                        <VectorGraphic name=\"shapex\" height=\"32pt\" />\n                    </Link>\n                </NavAbsolutContainer>\n            </RelativeContainer>\n            <StyledNavContainer>\n                <NavRow>\n                    {i18n.language === 'de' ? <NavLink onClick={onChangeLanguage}>{\"en \"}</NavLink> : \"en \"}\n                    {\"|\"}\n                    {i18n.language === 'en' ? <NavLink onClick={onChangeLanguage}>{\" de\"}</NavLink> : \" de\"}\n                </NavRow>\n                {!clientID && !contractorID && (\n                    <NavLink onClick={onClickRegisterPrinter}>\n                        {t('common.registerPrinter')}\n                    </NavLink>\n                )}\n                {contractorID && <ContractorIcon />}\n                {clientID && <ClientIcon />}\n            </StyledNavContainer>\n        </NavbarContainer>\n    );\n};\n","import styled from 'styled-components';\nimport { Button, Icon } from 'src/components';\n\nexport const Container = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  animation-name: animatebottom;\n  animation-duration: 0.3s;\n\n  @keyframes animatebottom {\n    from {\n      top: 60%;\n      opacity: 0;\n    }\n    to {\n      top: 50%;\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Wrapper = styled.div`\n    background-color: var(--color-bg-light);\n    border-radius: var(--border-radius-m);\n    border: 1.5px solid #FFFFFF11;\n    padding: var(--margin-l) var(--margin-l);\n    box-shadow: 0px 0px 20px #00000099;\n    width: 70vw;\n    max-width: 450pt;\n`;\n\n\nexport const UserGrid = styled.div`\n    display: grid;\n    width: 100%;\n    grid-template-columns: 1fr;\n    grid-column-gap: var(--margin-l);\n    grid-row-gap: var(--margin-l);\n`;\n\n\nexport const AddressGrid = styled.div`\n    display: grid;\n    width: 100%;\n    grid-template-columns: repeat(8, 1fr);\n    grid-column-gap: var(--margin-l);\n    grid-row-gap: var(--margin-l);\n    div:nth-child(1) {\n        grid-column: 1 / 9;\n    }\n    div:nth-child(2) {\n        grid-column: 1 / 7;\n    }\n    div:nth-child(3) {\n        grid-column: 7 / 9;\n    }\n    div:nth-child(4) {\n        grid-column: 1 / 9;\n    }\n\n    @media (max-width: 490px) {\n        div:nth-child(2) {\n            grid-column: 1 / 6;\n        }\n        div:nth-child(3) {\n            grid-column: 6 / 9;\n        }\n    }\n`;\n\n\nexport const AssignmentGrid = styled.div`\n    display: grid;\n    width: 100%;\n    grid-template-columns: repeat(8, 1fr);\n    grid-column-gap: var(--margin-l);\n    grid-row-gap: var(--margin-l);\n    div:nth-child(2) {\n        grid-column: 4 / 9;\n    }\n    div:nth-child(3) {\n        grid-column: 1 / 6;\n    }\n    div:nth-child(4) {\n        grid-column: 6 / 9;\n    }\n    div:nth-child(5) {\n        grid-column: 1 / 9;\n    }\n\n    @media (max-width: 610px) {\n        div:nth-child(2) {\n            grid-column: 1 / 9;\n        }\n    }\n`;\n\nexport const Title = styled.div`\n    font-size: 1.5rem;\n    font-weight: 700;\n    color: var(--color-text-light);\n    margin-bottom: var(--margin-r);\n`\n\nexport const ButtonContainer = styled.div`\n    margin-top: var(--margin-m);\n    display: flex;\n    flex: 1;\n    justify-content: flex-end;\n`\n\nexport const StyledButton = styled(Button)`\n    border: 0.5pt solid var(--color-border-light);\n    background-color: transparent;\n    \n    border-radius: var(--border-radius-s);\n    color: var(--color-text-light);\n    grid-column: 1 / 4;\n    height: 47px;\n    @media (max-width: 610px) {\n        grid-column: 1 / 9;\n    }\n`\n\nexport const StyledButtonText = styled.p`\n    font-size: var(--font-size-r);\n    font-weight: 600;\n`\n\nexport const StyledButtonFormatText = styled.p`\n    font-size: 0.5rem;\n    font-weight: 400;\n    margin: 2pt auto;\n`\nexport const StyledInput = styled.input`\n    display: none;\n`\n\nexport const StyledFileContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 0.5pt solid var(--color-border-light);\n    background-color: transparent;\n    border-radius: var(--border-radius-s);\n    color: var(--color-text-light);\n    grid-column: 1 / 4;\n    min-height: 45px;\n    cursor: pointer;\n    @media (max-width: 610px) {\n        grid-column: 1 / 9;\n    }\n`\n\nexport const StyledCloseIcon = styled(Icon)`\n  svg {\n    fill: var(--color-text-light);\n  }\n`;","import React from 'react';\nimport styled from 'styled-components';\n\n\nexport interface IIndexIndicator {\n    index: number;\n}\n\ninterface IDot {\n    active: boolean;\n}\n\nconst Container = styled.div`\n  position: fixed;\n  top: 5%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nconst Wrapper = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nconst Dot = styled.div<IDot>`\n    height: 10pt;\n    width: 10pt;\n    border-radius: 50%;\n    border: 1.5px solid var(--color-border-light);\n    background-color: ${({ active }) => active ? 'var(--color-border-light)' : undefined};\n`;\n\nconst Bar = styled.div`\n    height: 3pt;\n    width: 15pt;\n    border-radius: 1.5pt;\n    margin: 0 5pt;\n    background-color: var(--color-border-light);\n`;\n\nexport const IndexIndicator: React.FC<IIndexIndicator> = ({ index }) => {\n    return (\n        <Container>\n            <Wrapper>\n                <Dot active={true} />\n                <Bar />\n                <Dot active={index >= 1} />\n                <Bar />\n                <Dot active={index >= 2} />\n                <Bar />\n                <Dot active={index >= 3} />\n            </Wrapper>\n        </Container>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface ILoadingBar {\n    percentage: number;\n}\n\nconst Container = styled.div`\n    margin: var(--margin-l) 0;\n    display: flex;\n    flex: 1;\n    height: 0.8rem;\n    border: 0.5pt solid var(--color-border-light);\n    border-radius: 0.4rem;\n    overflow: hidden;\n`;\n\nconst StyledBar = styled.div<ILoadingBar>`\n    display: block;\n    width: ${({ percentage }) => percentage + \"%\"};\n    background-color: var(--color-border-light);\n    border-radius: 0.4rem;\n`;\n\nexport const LoadingBar: React.FC<ILoadingBar> = ({ percentage }) => {\n    return (\n        <Container>\n            <StyledBar percentage={percentage} />\n        </Container>\n    );\n};\n","import React from 'react';\nimport { Button, Input } from 'src/components';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    Container,\n    Wrapper,\n    UserGrid,\n    ButtonContainer,\n    AddressGrid,\n    AssignmentGrid,\n    StyledButton,\n    StyledButtonFormatText,\n    StyledFileContainer,\n    StyledCloseIcon,\n    StyledButtonText,\n    StyledInput,\n    Title,\n} from './assignment-form.style';\nimport { IndexIndicator } from './components/index-indicator';\nimport { LoadingBar } from './components/loading-bar';\nimport { closeModal, setPrompt } from 'src/store/layout/actions';\nimport { PromptType } from 'src/store/layout/types';\nimport { setClient } from 'src/store/user/actions';\nimport { RootState } from 'src/store';\n\n\nexport const AssignmentForm: React.FC = () => {\n    const { t } = useTranslation();\n    const { clientID } = useSelector((state: RootState) => state.user);\n    const dispatch = useDispatch();\n    const input = React.useRef<HTMLInputElement>(null)\n    const [formIndex, setFormIndex] = React.useState<number>(0)\n\n    // name\n    const [firstName, setFirstName] = React.useState<string>(\"\")\n    const [lastName, setLastName] = React.useState<string>(\"\")\n\n    // delivery\n    const [streetAddress, setStreetAddress] = React.useState<string>(\"\")\n    const [city, setCity] = React.useState<string>(\"\")\n    const [postalCode, setPostalCode] = React.useState<string>(\"\")\n    const [country, setCountry] = React.useState<string>(\"Deutschland\")\n\n    // contact\n    const [email, setEmail] = React.useState<string>(\"\")\n    const [phoneNumber, setPhoneNumber] = React.useState<string>(\"\")\n\n    // assignment\n    const [title, setTitle] = React.useState<string>(\"\")\n    const [compensation, setCompensation] = React.useState<string>(\"\")\n    const [currency, setCurrency] = React.useState<string>(\"EUR\")\n    const [notes, setNotes] = React.useState<string>(\"\")\n    const [file, setFile] = React.useState<any>()\n\n    // upload\n    const [progress, setProgress] = React.useState<number>(0)\n\n    React.useEffect(() => {\n        // jump to last form immidiatetly\n        if (clientID !== undefined) {\n            setFormIndex(3)\n        }\n    }, []);\n\n    const incrementFrom = () => {\n        if (formIndex === 0 && firstName && lastName) {\n            setFormIndex(formIndex + 1)\n        } else if (formIndex === 1 && streetAddress && city && postalCode && country) {\n            setFormIndex(formIndex + 1)\n        } else if (formIndex === 2 && email && phoneNumber) {\n            setFormIndex(formIndex + 1)\n        }\n    }\n\n    const onClickSelectFile = () => {\n        if (input.current) input.current.click();\n    }\n\n    const onChangeFile = (event) => {\n        event.stopPropagation();\n        event.preventDefault();\n        const f = event.target.files[0];\n        console.log(f)\n        setFile(f)\n    }\n\n    const renderNextButton = () => (\n        <ButtonContainer>\n            <Button onClick={incrementFrom}>{t(\"common.next\")}</Button>\n        </ButtonContainer>\n    )\n\n    const onClickRemoveFile = () => setFile(undefined)\n\n    const onClickSubmit = async () => {\n        const data = new FormData();\n        if (clientID === undefined) {\n            // there has no assignment been created yet\n            data.append('firstName', firstName);\n            data.append('lastName', lastName);\n            data.append('streetAddress', streetAddress);\n            data.append('city', city);\n            data.append('postalCode', postalCode);\n            data.append('country', country);\n            data.append('email', email);\n            data.append('phoneNumber', phoneNumber);\n        }\n        if (!title || !compensation || !currency || !file) {\n            return // something is missing\n        }\n        data.append('title', title);\n        data.append('compensation', compensation);\n        data.append('currency', currency);\n        data.append('file', file);\n        if (notes) data.append('notes', notes);\n\n        const request = new XMLHttpRequest();\n\n        request.open('POST', '/api/assignment');\n\n        if (clientID !== undefined) {\n            request.setRequestHeader(\"Authorization\", `Token ${clientID}`)\n        }\n\n        // upload progress event\n        request.upload.addEventListener('progress', (e) => {\n            // upload progress as percentage\n            const progress = (e.loaded / e.total) * 100;\n            setProgress(Math.round(progress))\n        });\n\n        // request finished event\n        request.addEventListener('load', (e) => {\n            // HTTP status message (200, 404 etc)\n            console.log('Status: ', request.status)\n\n            console.log('Response:')\n            console.log(request.response)\n\n            if (request.status === 201) {\n                const data = JSON.parse(request.response)\n                if (clientID === undefined) {\n                    console.log('New ID: ', data.client.$oid)\n                    localStorage.setItem('client_id', data.client.$oid);\n                    dispatch(setClient(data.client.$oid))\n                }\n                dispatch(setPrompt({\n                    type: PromptType.Success,\n                    duration: 4000,\n                    text: t('messages.assignmentCreatedSuccessfully'),\n                }))\n            } else if (request.status === 400) {\n                console.log('400 Error Text: ', t(request.response))\n                dispatch(setPrompt({\n                    type: PromptType.Error,\n                    duration: 4000,\n                    text: t(request.response),\n                }))\n            } else {\n                if (request.status === 404) {\n                    dispatch(setClient(undefined))\n                    localStorage.removeItem('client_id');\n                }\n                dispatch(setPrompt({\n                    type: PromptType.Error,\n                    duration: 4000,\n                    text: t('error.unexpectedErrorText'),\n                }))\n            }\n            dispatch(closeModal());\n        });\n\n        // send POST request to server\n        request.send(data);\n    }\n\n    return (\n        <>\n            {!Boolean(clientID) && <IndexIndicator index={formIndex} />}\n            {\n                formIndex === 0 && !Boolean(clientID) && (\n                    <Container>\n                        <Title>{t(\"assignment.nameTitle\")}</Title>\n                        <Wrapper>\n                            <UserGrid>\n                                <Input value={firstName} label={t(\"common.firstName\")} onChange={setFirstName} />\n                                <Input value={lastName} label={t(\"common.lastName\")} onChange={setLastName} />\n                            </UserGrid>\n                        </Wrapper>\n                        {renderNextButton()}\n                    </Container>\n                )\n            }\n            {\n                formIndex === 1 && !Boolean(clientID) && (\n                    <Container>\n                        <Title>{t(\"assignment.addressTitle\")}</Title>\n                        <Wrapper>\n                            <AddressGrid>\n                                <Input value={streetAddress} label={t(\"common.streetAddress\")} onChange={setStreetAddress} />\n                                <Input value={city} label={t(\"common.city\")} onChange={setCity} />\n                                <Input value={postalCode} label={t(\"common.zip\")} onChange={setPostalCode} />\n                                <Input value={country} label={t(\"common.country\")} onChange={setCountry} />\n                            </AddressGrid>\n                        </Wrapper>\n                        {renderNextButton()}\n                    </Container>\n                )\n            }\n            {\n                formIndex === 2 && !Boolean(clientID) && (\n                    <Container>\n                        <Title>{t(\"assignment.contactTitle\")}</Title>\n                        <Wrapper>\n                            <UserGrid>\n                                <Input value={phoneNumber} label={t(\"common.phoneNumber\")} onChange={setPhoneNumber} />\n                                <Input value={email} label={t(\"common.email\")} onChange={setEmail} />\n                            </UserGrid>\n                        </Wrapper>\n                        {renderNextButton()}\n                    </Container>\n                )\n            }\n            {\n                formIndex === 3 && (\n                    <Container>\n                        <Title>{t(\"assignment.assignmentTitle\")}</Title>\n                        <Wrapper>\n                            <AssignmentGrid>\n                                {file ? (\n                                    <StyledFileContainer onClick={onClickRemoveFile}>\n                                        <StyledCloseIcon name=\"trash\" size=\"14pt\" />\n                                    </StyledFileContainer>\n                                ) : (\n                                    <StyledButton onClick={onClickSelectFile}>\n                                        <div>\n                                            <StyledButtonText>\n                                                {t(\"common.select\")}\n                                            </StyledButtonText>\n                                            <StyledButtonFormatText>\n                                                STL | OBJ | AMF | 3MF | ZIP\n                                            </StyledButtonFormatText>\n                                        </div>\n                                    </StyledButton>\n                                )}\n                                <Input value={title} label={t(\"common.title\")} onChange={setTitle} />\n                                <Input value={compensation} label={t(\"common.compensation\")} onChange={setCompensation} />\n                                <Input value={currency} label={t(\"common.currency\")} onChange={setCurrency} />\n                                <Input value={notes} label={t(\"common.notesOptional\")} onChange={setNotes} />\n                            </AssignmentGrid>\n                        </Wrapper>\n                        {progress > 0 && <LoadingBar percentage={progress} />}\n                        <ButtonContainer>\n                            <Button onClick={onClickSubmit}>{t(\"common.submit\")}</Button>\n                        </ButtonContainer>\n                    </Container>\n                )\n            }\n            <StyledInput\n                type='file'\n                id='file'\n                onChange={onChangeFile}\n                ref={input}\n                accept=\".stl,.obj,.amf,.3mf,.zip\"\n            />\n        </>\n\n    );\n};\n","import styled from 'styled-components';\n\n\nexport const Container = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  animation-name: animatebottom;\n  animation-duration: 0.3s;\n\n  @keyframes animatebottom {\n    from {\n      top: 60%;\n      opacity: 0;\n    }\n    to {\n      top: 50%;\n      opacity: 1;\n    }\n  }\n`;\n\n\nexport const Title = styled.div`\n    font-size: 1.5rem;\n    font-weight: 700;\n    color: var(--color-text-light);\n    margin-bottom: var(--margin-s);\n    @media (max-width: 1020px) {\n        font-size: 1.1rem;\n        margin-bottom: var(--margin-xs);\n    }\n    @media (max-width: 810px) {\n        text-align: center;\n    }\n`;\n\n\nexport const SubTitle = styled.div`\n    font-size: 1rem;\n    font-weight: 500;\n    color: var(--color-text-dark);\n    margin-bottom: var(--margin-r);\n    @media (max-width: 1020px) {\n        font-size: 0.8rem;\n    }\n    @media (max-width: 810px) {\n        text-align: center;\n    }\n`;\n\n\nexport const Card = styled.div`\n    background-color: var(--color-bg-light);\n    border-radius: var(--border-radius-m);\n    border: 1.5px solid #FFFFFF11;\n    padding: var(--margin-l) var(--margin-s);\n    box-shadow: 0px 0px 20px #00000099;\n    width: 80vw;\n    max-width: 1600pt;\n    @media (max-width: 810px) {\n        max-height: 60vh;\n        overflow-y: scroll;\n    }\n    @media (max-width: 550px) {\n        overflow-y: auto;\n        max-height: 55vh;\n    }\n`;\n\n\nexport const Wrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n`;\n\n\nexport const Column = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    flex: 1;\n`;\n\n\nexport const ColumnTitle = styled.h6`\n    font-size: 1rem;\n    font-weight: 600;\n    color: var(--color-text-light);\n    margin-bottom: var(--margin-r);\n    text-align: center;\n    @media (max-width: 1020px) {\n        font-size: 0.8rem;\n        margin-bottom: var(--margin-s);\n    }\n`;\n\n\nexport const Divider = styled.div`\n    width: 1.5px;\n    background-color: var(--color-text-light);\n`;\n\n\nexport const DotContainer = styled.div`\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    width: 16px;\n    right: -8px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\n\nexport const Dot = styled.span`\n    height: 13px;\n    width: 13px;\n    border: 1.5px solid var(--color-text-light);\n    border-radius: 50%;\n    display: inline-block;\n`;\n\n\nexport const Text = styled.p`\n    font-size: 0.85rem;\n    line-height: 1.3rem;\n    font-weight: 500;\n    color: var(--color-text-light);\n    text-align: center;\n    margin: 0.4rem 1rem;\n    @media (max-width: 1020px) {\n        font-size: 0.7rem;\n        margin: 0.2rem 0.6rem;\n    }\n`;\n\n\nexport const ButtonContainer = styled.div`\n    margin-top: var(--margin-m);\n    display: flex;\n    flex: 1;\n    justify-content: flex-end;\n`;\n","import React from 'react';\nimport { Button } from 'src/components';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\nimport { closeModal } from 'src/store/layout/actions';\nimport {\n    Container,\n    Wrapper,\n    ButtonContainer,\n    Title,\n    SubTitle,\n    Column,\n    Divider,\n    ColumnTitle,\n    Text,\n    Card,\n    DotContainer,\n    Dot\n} from './tutorial.style';\n\nexport const Tutorial: React.FC = () => {\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n\n    const onClick = () => {\n        window.localStorage.setItem(\"tutorial\", \"_hidden\")\n        dispatch(closeModal());\n    }\n\n    return (\n        <Container>\n            <Title>{t(\"home.welcome\")}</Title>\n            <SubTitle>{t(\"home.howItWorks\")}</SubTitle>\n            <Card>\n\n                <Wrapper>\n                    <Column>\n                        <ColumnTitle>{t(\"common.client\")}</ColumnTitle>\n                    </Column>\n                    <Divider />\n                    <Column>\n                        <ColumnTitle>{t(\"common.contractor\")}</ColumnTitle>\n                    </Column>\n                </Wrapper>\n                <Wrapper>\n                    <Column>\n                        <DotContainer><Dot /></DotContainer>\n                    </Column>\n                    <Divider />\n                    <Column>\n                        <Text>{t('home.tutorial0')}</Text>\n                    </Column>\n                </Wrapper>\n\n                <Wrapper>\n                    <Column>\n                        <Text>{t('home.tutorial1')}</Text>\n                        <DotContainer><Dot /></DotContainer>\n                    </Column>\n                    <Divider />\n                    <Column />\n                </Wrapper>\n\n                <Wrapper>\n                    <Column>\n                        <DotContainer><Dot /></DotContainer>\n                    </Column>\n                    <Divider />\n                    <Column>\n                        <Text>{t('home.tutorial2')}</Text>\n                    </Column>\n                </Wrapper>\n\n                <Wrapper>\n                    <Column>\n                        <Text>{t('home.tutorial3')}</Text>\n                        <DotContainer><Dot /></DotContainer>\n                    </Column>\n                    <Divider />\n                    <Column />\n                </Wrapper>\n\n                <Wrapper>\n                    <Column>\n                        <DotContainer><Dot /></DotContainer>\n                    </Column>\n                    <Divider />\n                    <Column>\n                        <Text>{t('home.tutorial4')}</Text>\n                    </Column>\n                </Wrapper>\n\n            </Card>\n            <ButtonContainer>\n                <Button onClick={onClick}>{t(\"home.understood\")}</Button>\n            </ButtonContainer>\n        </Container>\n\n    );\n};\n","import styled from 'styled-components';\nimport { Container, Button } from 'src/components';\n\nexport const RelativeContainer = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nexport const BackgroundImage = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  padding-top: 55%;\n  background-color: var(--color-bg-dark); /* Used if the image is unavailable */\n  background-position: center; /* Center the image */\n  background-repeat: no-repeat; /* Do not repeat the image */\n  background-size: cover; /* Resize the background image to cover the entire container */\n  background-image:\n    linear-gradient(to top, rgba(0, 0, 0, 1), rgba(0, 0, 0, 0) 50%),\n    url(\"https://images.unsplash.com/photo-1508277267762-0044b6c5a1e0?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80\");\n  filter: brightness(30%);\n  @media (max-width: 750px) {\n    padding-top: 80%;\n  }\n\n  @media (max-width: 550px) {\n    padding-top: 100%;\n  }\n\n  @media (max-width: 450px) {\n    padding-top: 130%;\n  }\n`\n\nexport const StyledContainer = styled(Container)`\n  display: flex;\n  flex-direction: column;\n  height: 80vh;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const TitleContainer = styled.div`\n  width: 100%;\n  justify-content: center;\n  display: flex;\n  z-index: 1;\n`\n\nexport const Title = styled.h1`\n  text-align: center;\n  font-size: 4rem;\n  color: var(--color-text-light);\n  font-weight: 800;\n  strong {\n    -webkit-text-fill-color: transparent;\n    -webkit-text-stroke-color: var(--color-text-light);\n    -webkit-text-stroke-width: 2.00px; \n  }\n  @media (max-width: 1265px) {\n    font-size: 3rem;\n  }\n  @media (max-width: 990px) {\n    font-size: 2.4rem;\n  }\n  @media (max-width: 820px) {\n    font-size: 2rem;\n    strong {\n      -webkit-text-stroke-width: 1.5px; \n    }\n  }\n  @media (max-width: 715px) {\n    font-size: 1.5rem;\n  }\n  @media (max-width: 550px) {\n    line-height: 1.8em;\n  }\n`;\n\nexport const TitleWrapper = styled.h1`\n  position: relative;\n  padding-bottom: 2.1rem;\n  @media (max-width: 820px) {\n    padding-bottom: 1.8rem;\n  }\n  @media (max-width: 715px) {\n    padding-bottom: 1.5rem;\n  }\n  @media (max-width: 550px) {\n    padding-bottom: 1rem;\n  }\n`\n\nexport const BetaBadgeContainer = styled.div`\n  padding: 0.2rem 0.4rem 0.15rem;\n  border-radius: var(--border-radius-s);\n  background-color: var(--color-text-light);\n  position: absolute;\n  right: 0;\n  bottom: 0;\n`\n\nexport const BetaBadgeText = styled.p`\n  font-size: 0.9rem;\n  font-weight: 600;\n  color: var(--color-bg-dark);\n  @media (max-width: 820px) {\n    font-size: 0.7rem;\n  }\n  @media (max-width: 715px) {\n    font-size: 0.6rem;\n  }\n`\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 4rem;\n  z-index: 1;\n`\n\nexport const StyledButton = styled(Button)`\n  padding: 0 16pt;\n`\n\nexport const DescriptionContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr auto 1fr;\n  grid-column-gap: var(--margin-l);\n  margin-top: 4rem;\n  width: 100%;\n  z-index: 1;\n  @media (max-width: 710px) {\n    grid-template-columns: 1fr;\n    grid-row-gap: var(--margin-l);\n  }\n`\n\nexport const DescriptionTextContainer = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const DescriptionDivider = styled.div`\n  width: 1px;\n  margin: auto 0;\n  background-color: var(--color-text-light);\n  opacity: 60%;\n  height: 30pt;\n  @media (max-width: 710px) {\n    width: 30pt;\n    height: 1px;\n    margin: 0 auto;\n  }\n`\n\nexport const Description = styled.h6`\n  font-size: 1.3em;\n  line-height: 1.6em;\n  text-align: center;\n  color: var(--color-text-light);\n  font-weight: 400;\n  @media (max-width: 990px) {\n    font-size: 1em;\n    line-height: 1.3em;\n  }\n  @media (max-width: 820px) {\n    font-size: 0.9em;\n    line-height: 1.2em;\n  }\n  @media (max-width: 550px) {\n    font-size: 0.8em;\n    line-height: 1.2em;\n  }\n`\n\nexport const StyledAssignmentContainer = styled(Container)`\n    margin-bottom: var(--margin-xxl);\n`;\n\nexport const AssignmentsGrid = styled.div`\n    display: grid;\n    width: 100%;\n    grid-template-columns: repeat(3, 1fr);\n    grid-column-gap: var(--margin-l);\n    grid-row-gap: var(--margin-xl);\n\n    @media (max-width: 1350px) {\n      grid-template-columns: repeat(2, 1fr);\n    }\n    @media (max-width: 1050px) {\n      grid-template-columns: repeat(1, 1fr);\n    }\n`\n\nexport const TutorialButtonContainer = styled.div`\n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  bottom: 2%;\n  left: 50%;\n  transform: translate(-50%, -3%);\n  animation-name: animatebottom;\n  animation-duration: 0.3s;\n  background-color: var(--color-bg-light);\n  border-radius: var(--border-radius-l);\n  border: 1.5px solid #FFFFFF11;\n  padding: var(--margin-r) var(--margin-r);\n  box-shadow: 0px 0px 20px #00000099;\n  cursor: pointer;\n  width: 82vw;\n  max-width: 300pt;\n  z-index: 4;\n\n  @keyframes animatebottom {\n    from {\n      bottom: 0%;\n      opacity: 0;\n    }\n    to {\n      bottom: 3%;\n      opacity: 1;\n    }\n  }\n\n  @supports (\n    (-webkit-backdrop-filter: blur(2em)) or (backdrop-filter: blur(2em))\n  ) {\n    -webkit-backdrop-filter: blur(2em);\n    backdrop-filter: blur(2em);\n  }\n`;\n\nexport const TutorialText = styled.div`\n  font-size: 0.8rem;\n  font-weight: 600;\n  color: var(--color-green);\n`;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n// store\nimport { RootState } from 'src/store';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useAssignments } from 'src/data/hooks';\nimport { openModal } from 'src/store/layout/actions';\n// components\nimport { AssignmentItem, Footer, Navbar } from 'src/components';\nimport { AssignmentForm, Tutorial } from './components';\nimport {\n  BackgroundImage,\n  StyledContainer,\n  TitleContainer,\n  Title,\n  ButtonContainer,\n  StyledButton,\n  DescriptionContainer,\n  DescriptionTextContainer,\n  DescriptionDivider,\n  Description,\n  AssignmentsGrid,\n  StyledAssignmentContainer,\n  RelativeContainer,\n  TitleWrapper,\n  BetaBadgeContainer,\n  BetaBadgeText,\n  TutorialButtonContainer,\n  TutorialText\n} from './home.styles';\n\n\nexport const Home: React.FC = () => {\n  const [visible, setVisible] = React.useState<boolean>(false)\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const { assignments } = useAssignments();\n  const layout = useSelector((state: RootState) => state.layout);\n  const { clientID, contractorID } = useSelector((state: RootState) => state.user);\n  const onClickCreateAssignment = () => dispatch(openModal(<AssignmentForm />));\n  const onClickShowTutorial = () => dispatch(openModal(<Tutorial />));\n\n  React.useEffect(() => {\n    const token = clientID ? clientID : contractorID ? contractorID : false\n    const registerPageVisit = async () => {\n      const res = await fetch(\"/api/metrics/page-visit\", {\n        method: 'GET',\n        headers: token ? { Authorization: `Token ${token}` } : {},\n      })\n    }\n    registerPageVisit()\n  }, [])\n\n  React.useEffect(() => {\n    if (!window.localStorage.getItem(\"tutorial\")) {\n      setVisible(true)\n    } else {\n      setVisible(false)\n    }\n  }, [layout.modalIsVisible])\n\n  return (\n    <div>\n      <RelativeContainer>\n        <BackgroundImage />\n      </RelativeContainer>\n      <Navbar />\n      <StyledContainer>\n        <TitleContainer>\n          <TitleWrapper>\n            <Title dangerouslySetInnerHTML={{ __html: t('home.broker') }} />\n            <BetaBadgeContainer>\n              <BetaBadgeText>BETA</BetaBadgeText>\n            </BetaBadgeContainer>\n          </TitleWrapper>\n        </TitleContainer>\n        <DescriptionContainer>\n          <DescriptionTextContainer>\n            <Description>\n              {t('home.insentive0')}\n            </Description>\n          </DescriptionTextContainer>\n          <DescriptionDivider />\n          <DescriptionTextContainer>\n            <Description>\n              {t('home.insentive1')}\n            </Description>\n          </DescriptionTextContainer>\n        </DescriptionContainer>\n\n        <ButtonContainer>\n          <StyledButton onClick={onClickCreateAssignment}>\n            {t('common.createAssignmentNow')}\n          </StyledButton>\n        </ButtonContainer>\n\n      </StyledContainer>\n      {/* Extract to component */}\n      <StyledAssignmentContainer>\n        <AssignmentsGrid>\n          {Boolean(assignments) && assignments.map((item) => (\n            <AssignmentItem key={item._id.$oid} item={item} />\n          ))}\n        </AssignmentsGrid>\n      </StyledAssignmentContainer>\n      <Footer />\n      {visible && (\n        <TutorialButtonContainer onClick={onClickShowTutorial}>\n          <TutorialText>{t('home.tutorial')}</TutorialText>\n        </TutorialButtonContainer>\n      )}\n    </div>\n  );\n};\n","import styled from 'styled-components';\nimport { Button, Icon, Input } from 'src/components';\n\nexport const Container = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    min-height: 300px;\n    border-radius: var(--border-radius-l);\n    padding: var(--margin-l) var(--margin-m);\n    background-color: var(--color-bg-light);\n`\n\n\nexport const Title = styled.h5`\n    max-width: 90%;\n    font-weight: 600;\n    font-size: 1.1rem;\n    color: var(--color-text-light);\n    margin-bottom: var(--margin-r);\n`\n\nexport const CompensationRow = styled.div`\n    display: flex;\n    align-items: flex-end;\n`\n\nexport const Compensation = styled.h1`\n    font-weight: 700;\n    font-size: 3rem;\n    color: var(--color-text-light);\n`\n\nexport const CompensationCurrency = styled.p`\n    font-weight: 600;\n    font-size: 1.2rem;\n    color: var(--color-text-light);\n    margin-left: var(--margin-s);\n    margin-bottom: 6pt;\n`\n\nexport const Divider = styled.div`\n  height: 1px;\n  background-color: var(--color-text-light);\n  opacity: 80%;\n  width: 100%;\n  margin-bottom: var(--margin-s);\n`\n\nexport const Label = styled.p`\n    font-weight: 600;\n    font-size: 0.8rem;\n    color: var(--color-text-dark);\n    margin-bottom: var(--margin-s);\n    text-align: right;\n`\n\nexport const Number = styled.h3`\n    font-weight: 700;\n    font-size: 1.6rem;\n    color: var(--color-text-light);\n    margin-bottom: var(--margin-s);\n`\n\nexport const NotesLabel = styled.p`\n    font-weight: 500;\n    font-size: 1rem;\n    color: var(--color-text-light);\n    margin: var(--margin-s) 0;\n`\n\nexport const Notes = styled.p`\n    font-weight: 400;\n    font-size: 0.9rem;\n    line-height: 1.2rem;\n    font-family: sans-serif, 'Montserrat';\n    color: var(--color-text-light);\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n`\n\nexport const StyledIcon = styled(Icon)`\n    position: absolute;\n    top: var(--margin-l);\n    right: var(--margin-m);\n    cursor: pointer;\n    svg {\n        fill: var(--color-text-light);\n    }\n`;\n\nexport const InputRow = styled.div`\n    position: relative;\n    display: flex;\n    flex: 1;\n    margin-top: var(--margin-xl);\n    div:nth-child(1) {\n        flex: 1;\n        input {\n            z-index: 2;\n        }\n    }\n\n`\n\nexport const StyledInput = styled(Input)`\n\n`\n\nexport const SendButton = styled.div`\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    top: 0;\n    right: 0;\n    svg {\n        fill: var(--color-green);\n    }\n    width: 25pt;\n    height: 35pt;\n    cursor: pointer;\n    z-index: 3;\n`\n\nexport const CommentUserName = styled.div`\n    font-weight: 600;\n    font-size: 1rem;\n    color: var(--color-text-light);\n    margin-top: var(--margin-m);\n`\n\nexport const Comment = styled.div`\n    font-weight: 400;\n    font-size: 0.8rem;\n    color: var(--color-text-light);\n    margin-top: var(--margin-s);\n`\n","import styled from 'styled-components';\nimport { Button } from 'src/components';\n\nexport const Title = styled.h5`\n    max-width: 90%;\n    font-weight: 600;\n    font-size: 1.1rem;\n    color: var(--color-text-light);\n    margin-bottom: var(--margin-r);\n`\n\nexport const StyledButton = styled(Button)`\n    margin-top: var(--margin-r);\n`\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    border-radius: var(--border-radius-s);\n    padding: var(--margin-m);\n    background-color: var(--color-bg-light);\n    margin-top: var(--margin-m);\n`\n\nexport const SubTitle = styled.p`\n    font-weight: 400;\n    font-size: 0.7rem;\n    color: var(--color-text-dark);\n    margin-bottom: var(--margin-m);\n`\n\nexport const TableDivider = styled.div`\n  height: 1px;\n  background-color: var(--color-text-light);\n  opacity: 30%;\n  width: 100%;\n  margin: var(--margin-r) 0;\n`\n\nexport const TableRow = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex: 1;\n    justify-content: space-between;\n`\n\nexport const TableName = styled.p`\n    font-weight: 600;\n    font-size: 0.8rem;\n    color: var(--color-text-dark);\n    \n`\n\nexport const TableValue = styled.p`\n    font-weight: 500;\n    font-size: 0.8rem;\n    color: var(--color-text-light);\n`\n\nexport const RatingRow = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex: 1;\n    justify-content: space-around;\n    align-items: center;\n    padding: var(--margin-xl);\n`\n\nexport const RatingColumn = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\n\nexport const StarRow = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    svg {\n        fill: var(--color-rating);\n    }\n`\n\nexport const StarText = styled.h5`\n    font-weight: 600;\n    font-size: 1.5rem;\n    color: var(--color-text-light);\n    margin-left: var(--margin-s);\n`\n\nexport const RatingLabel = styled.p`\n    font-weight: 400;\n    font-size: 0.8rem;\n    color: var(--color-text-dark);\n    margin-top: var(--margin-s);\n`","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n// store\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from 'src/store';\nimport { setPrompt } from 'src/store/layout/actions';\nimport { PromptType } from 'src/store/layout/types';\n// components\nimport {\n    Title,\n    StyledButton,\n    Container,\n    SubTitle,\n    TableDivider,\n    TableRow,\n    TableName,\n    TableValue,\n    RatingRow,\n    RatingColumn,\n    StarRow,\n    StarText,\n    RatingLabel\n} from './contractor-item.styles';\nimport { Icon } from 'src/components';\n\ninterface IContractorItem {\n    item: any;\n    assignmentID: string;\n    state: 'open' | 'assigned' | 'closed';\n    openRatingModal?: (contractorID: string) => void;\n}\n\nexport const ContractorItem: React.FC<IContractorItem> = ({ item, assignmentID, state, openRatingModal }) => {\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n    const { clientID } = useSelector((state: RootState) => state.user);\n\n    const onClickAcceptContractor = async () => {\n        const res = await fetch(`/api/assignment/${assignmentID}?accept-contractor=${item._id.$oid}`, {\n            method: 'GET',\n            headers: { Authorization: `Token ${clientID}` }\n        });\n        if (res.status === 200) {\n            dispatch(setPrompt({\n                type: PromptType.Success,\n                duration: 9000,\n                text: t('messages.contractorAcceptedSuccessfully'),\n            }))\n        } else {\n            dispatch(setPrompt({\n                type: PromptType.Error,\n                duration: 4000,\n                text: t('error.unexpectedErrorText'),\n            }))\n        }\n    }\n\n    const onClickRateContractor = () => {\n        if(openRatingModal) openRatingModal(item._id.$oid)\n    }\n\n    return (\n        <Container>\n            <Title>{`${item.first_name} ${item.last_name}`}</Title>\n            <SubTitle>{item.country}</SubTitle>\n            <TableDivider />\n            <TableRow>\n                <TableName>{t('common.printerName')}</TableName>\n                <TableValue>{item.printer_name}</TableValue>\n            </TableRow>\n            <TableDivider />\n            <TableRow>\n                <TableName>{t('common.itemNumber')}</TableName>\n                <TableValue>{item.item_number}</TableValue>\n            </TableRow>\n            <TableDivider />\n            <TableRow>\n                <TableName>{t('common.materials')}</TableName>\n                <TableValue>{item.material}</TableValue>\n            </TableRow>\n            <TableDivider />\n            <TableRow>\n                <TableName>{t('common.email')}</TableName>\n                <TableValue>{item.email}</TableValue>\n            </TableRow>\n            <TableDivider />\n            <TableRow>\n                <TableName>{t('common.phoneNumber')}</TableName>\n                <TableValue>{item.phone_number}</TableValue>\n            </TableRow>\n            <TableDivider />\n\n            {\n                state === 'open' && item.averageRating.quality > 0 && (\n                    <RatingRow>\n                        <RatingColumn>\n                            <StarRow>\n                                <Icon name=\"star\" size=\"16pt\" />\n                                <StarText>{item.averageRating.quality.toFixed(1)}</StarText>\n                            </StarRow>\n                            <RatingLabel>{t('common.quality')}</RatingLabel>\n                        </RatingColumn>\n\n                        <RatingColumn>\n                            <StarRow>\n                                <Icon name=\"star\" size=\"16pt\" />\n                                <StarText>{item.averageRating.communication.toFixed(1)}</StarText>\n                            </StarRow>\n                            <RatingLabel>{t('common.communication')}</RatingLabel>\n                        </RatingColumn>\n\n                        <RatingColumn>\n                            <StarRow>\n                                <Icon name=\"star\" size=\"16pt\" />\n                                <StarText>{item.averageRating.shipping.toFixed(1)}</StarText>\n                            </StarRow>\n                            <RatingLabel>{t('common.shipping')}</RatingLabel>\n                        </RatingColumn>\n                    </RatingRow>\n                )\n            }\n            {state === 'open' && <StyledButton onClick={onClickAcceptContractor}>{t('common.accept')}</StyledButton>}\n            {state === 'closed' && <StyledButton onClick={onClickRateContractor}>{t('common.rate')}</StyledButton>}\n        </Container>\n    );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n// store\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from 'src/store';\nimport { setAlert, setPrompt } from 'src/store/layout/actions';\nimport { PromptType } from 'src/store/layout/types';\n// components\nimport {\n    Container,\n    Title,\n    Compensation,\n    CompensationRow,\n    CompensationCurrency,\n    Divider,\n    Label,\n    Number,\n    NotesLabel,\n    Notes,\n    StyledIcon,\n    StyledInput,\n    SendButton,\n    InputRow,\n    CommentUserName,\n    Comment\n} from './assignment-item.style';\nimport { getCurrency } from 'src/services/currency';\nimport { ContractorItem } from './contractor-item';\nimport { Icon } from 'src/components';\n\ninterface IAssignmentItem {\n    item: any\n    state: 'open' | 'assigned' | 'closed';\n    openRatingModal?: (contractorID: string) => void;\n}\n\nexport const AssignmentItem: React.FC<IAssignmentItem> = ({ item, state, openRatingModal }) => {\n    const dispatch = useDispatch();\n    const { t } = useTranslation();\n    const { clientID } = useSelector((state: RootState) => state.user);\n    const [comment, setComment] = React.useState<string>(\"\")\n\n    const onClickRemove = async () => {\n        const deleteAssignemt = async () => {\n            const res = await fetch(`/api/assignment/${item._id.$oid}`, {\n                method: 'DELETE',\n                headers: {\n                    Authorization: `Token ${clientID}`\n                },\n            });\n            if (res.status === 204) {\n                dispatch(setPrompt({\n                    type: PromptType.Success,\n                    duration: 4000,\n                    text: t('messages.assignmentDeletedSuccessfully'),\n                }))\n            } else if (res.status === 401) {\n                dispatch(setPrompt({\n                    type: PromptType.Error,\n                    duration: 4000,\n                    text: t('error.unauthorized'),\n                }))\n            } else {\n                dispatch(setPrompt({\n                    type: PromptType.Error,\n                    duration: 4000,\n                    text: t('error.unexpectedErrorText'),\n                }))\n            }\n        }\n\n        dispatch(setAlert({\n            title: t('alert.deleteAssignmentTitle'),\n            text: t('alert.deleteAssignmentText'),\n            confirm: t('common.delete'),\n            cancel: t('common.cancel'),\n            onClick: deleteAssignemt,\n        }))\n    }\n\n    const onClickSendComment = async () => {\n        const res = await fetch(`/api/assignment/${item._id.$oid}/comment`, {\n            method: 'POST',\n            headers: {\n                Authorization: `Token ${clientID}`\n            },\n            body: JSON.stringify({ text: comment })\n        });\n        if (res.status === 201) {\n            setComment('')\n            dispatch(setPrompt({\n                type: PromptType.Success,\n                duration: 4000,\n                text: t('messages.commentCreatedSuccessfully'),\n            }));\n        } else {\n            dispatch(setPrompt({\n                type: PromptType.Error,\n                duration: 4000,\n                text: t('error.unexpectedErrorText'),\n            }));\n        }\n    }\n\n    return (\n        <Container>\n            <Title>\n                {item.title}\n            </Title>\n            {state === 'open' && <StyledIcon name=\"close\" onClick={onClickRemove} size=\"18pt\" />}\n            <CompensationRow>\n                <Compensation>\n                    {item.compensation}\n                </Compensation>\n                <CompensationCurrency>\n                    {getCurrency(item.currency)}\n                </CompensationCurrency>\n            </CompensationRow>\n            <Divider />\n            <Label>{t('common.compensation').toUpperCase()}</Label>\n            {state === 'open' && (\n                <>\n                    <Number>{item.applicants?.length}</Number>\n                    <Divider />\n                    <Label>{t('common.applicants').toUpperCase()}</Label>\n                </>\n            )}\n            <Number>{item.comments?.length}</Number>\n            <Divider />\n            <Label>{t('common.comments').toUpperCase()}</Label>\n            {item.notes !== undefined && (\n                <>\n                    <NotesLabel>\n                        {t('common.notes') + \":\"}\n                    </NotesLabel>\n                    <Notes>\n                        {item.notes}\n                    </Notes>\n                </>\n            )}\n            {state === 'open' && item.applicants?.map(applicant => (\n                <ContractorItem\n                    item={applicant}\n                    key={applicant._id.$oid}\n                    assignmentID={item._id.$oid}\n                    state=\"open\"\n                />\n            ))}\n            {state !== 'open' && (\n                <ContractorItem\n                    item={item.contractor}\n                    assignmentID={item._id.$oid}\n                    state={state}\n                    openRatingModal={openRatingModal}\n                />\n            )}\n            {state !== 'closed' && (\n                <InputRow>\n                    <StyledInput\n                        value={comment}\n                        onChange={setComment}\n                        label={t('assignment.writeComment')}\n                    />\n                    <SendButton onClick={onClickSendComment}>\n                        <Icon name=\"send\" size=\"16pt\" />\n                    </SendButton>\n                </InputRow>\n            )}\n            {item.comments.map((comment, index) => (\n                <div key={index}>\n                    <CommentUserName>{comment.user_name}</CommentUserName>\n                    <Comment>{comment.text}</Comment>\n                </div>\n            ))}\n        </Container>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useTranslation } from 'react-i18next';\nimport { Button, Icon } from 'src/components';\nimport { setPrompt } from 'src/store/layout/actions';\nimport { PromptType } from 'src/store/layout/types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from 'src/store';\n\ninterface IRatingModal {\n    close: () => void;\n    contractorID: string;\n}\n\nconst Container = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  border-radius: var(--border-radius-l);\n  padding: var(--margin-l) var(--margin-m);\n  animation-name: animatetop;\n  animation-duration: 0.3s;\n  width: 80vw;\n  max-width: 450pt;\n  background-color: var(--color-text-light);\n  z-index: 2;\n  box-shadow: 0px 0px 20px #00000099;\n\n  @keyframes animatetop {\n    from {\n      top: 60%;\n    }\n    to {\n      top: 50%;\n    }\n  }\n`;\n\nconst Title = styled.h5`\n    font-weight: 700;\n    font-size: 1.2rem;\n    color: var(--color-bg-dark);\n    margin-bottom: var(--margin-m);\n`\n\nconst Text = styled.p`\n    color: var(--color-bg-dark); \n    font-size: 0.9rem;\n    font-weight: 600;\n`\n\nconst Row = styled.div`\n    display: flex;\n    width: 100%;\n    justify-content: space-between;\n    align-items: center;\n    margin: var(--margin-m) 0;\n`\n\nconst IconRow = styled.div`\n    display: flex;\n    align-items: center;\n    svg {\n        cursor: pointer;\n        fill: var(--color-rating);\n    }\n`\n\nconst IconSpacer = styled.div`\n    width: var(--margin-r);\n`\n\nconst ButtonRow = styled.div`\n    display: flex;\n    width: 100%;\n    margin-top: var(--margin-xl);\n`\n\nconst PrimaryButton = styled(Button)`\n  background-color: var(--color-bg-dark);\n  margin-left: var(--margin-r);\n  flex: 1;\n  color: var(--color-text-light);\n`\n\nconst SecondaryButton = styled(Button)`\n  background-color: transparent;\n  border: 2px solid var(--color-bg-dark);\n  color:  var(--color-bg-dark);\n  flex: 1;\n`\n\nexport const RatingModal: React.FC<IRatingModal> = ({ close, contractorID }) => {\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n    const [quality, setQuality] = React.useState(-1)\n    const [communication, setCommunication] = React.useState(-1)\n    const [shipping, setShipping] = React.useState(-1)\n    const { clientID } = useSelector((state: RootState) => state.user);\n\n    const onClickConfirm = async () => {\n        if (quality < 0 || communication < 0 || shipping < 0) {\n            return\n        }\n\n        const res = await fetch(`/api/contractor/${contractorID}/rating`, {\n            method: 'POST',\n            headers: { Authorization: `Token ${clientID}` },\n            body: JSON.stringify({\n                quality: quality + 1,\n                communication: communication + 1,\n                shipping: shipping + 1\n            })\n        });\n        if (res.status === 201) {\n            dispatch(setPrompt({\n                type: PromptType.Success,\n                duration: 9000,\n                text: t('messages.ratingCreatedSuccessfully'),\n            }));\n        } else {\n            dispatch(setPrompt({\n                type: PromptType.Error,\n                duration: 4000,\n                text: t('error.unexpectedErrorText'),\n            }));\n        }\n        close()\n    }\n\n    return (\n        <Container>\n            <Title>{t('common.rateUser')}</Title>\n\n            <Row>\n                <Text>{t('common.quality')}</Text>\n                <IconRow>\n                    {[0, 1, 2, 3, 4].map((i) => (\n                        <>\n                            <IconSpacer />\n                            <Icon\n                                name={quality < i ? \"star-outline\" : \"star\"}\n                                size=\"22pt\"\n                                onClick={() => setQuality(i)}\n                            />\n                        </>\n\n                    ))}\n                </IconRow>\n            </Row>\n\n            <Row>\n                <Text>{t('common.communication')}</Text>\n                <IconRow>\n                    {[0, 1, 2, 3, 4].map((i) => (\n                        <>\n                            <IconSpacer />\n                            <Icon\n                                name={communication < i ? \"star-outline\" : \"star\"}\n                                size=\"22pt\"\n                                onClick={() => setCommunication(i)}\n                            />\n                        </>\n                    ))}\n                </IconRow>\n            </Row>\n\n            <Row>\n                <Text>{t('common.shipping')}</Text>\n                <IconRow>\n                    {[0, 1, 2, 3, 4].map((i) => (\n                        <>\n                            <IconSpacer />\n                            <Icon\n                                name={shipping < i ? \"star-outline\" : \"star\"}\n                                size=\"22pt\"\n                                onClick={() => setShipping(i)}\n                            />\n                        </>\n                    ))}\n                </IconRow>\n            </Row>\n\n            <ButtonRow>\n                <SecondaryButton onClick={close}>\n                    {t('common.cancel')}\n                </SecondaryButton>\n                <PrimaryButton onClick={onClickConfirm}>\n                    {t('common.submit')}\n                </PrimaryButton>\n            </ButtonRow>\n        </Container>\n    )\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useTranslation } from 'react-i18next';\nimport { Container, Footer, Navbar } from 'src/components';\nimport { useClientAssignments } from 'src/data/hooks';\nimport { AssignmentItem } from './components/assignment-item';\nimport { RatingModal } from './components/rating-modal';\n\n\nconst SyledContainer = styled(Container)`\n  min-height: 100vh;\n`;\n\nconst AssignmentGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-row-gap: var(--margin-l);\n  grid-column-gap: var(--margin-m);\n  margin-top: var(--margin-xl);\n  @media (max-width: 1050px) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n`\n\nconst Title = styled.h1`\n  font-size: 2.4rem;\n  font-weight: 700;\n  color: var(--color-text-light);\n  margin-top: var(--margin-xl);\n  @media (max-width: 650px) {\n    font-size: 2rem;\n  }\n  @media (max-width: 450px) {\n    font-size: 1.6rem;\n  }\n`\n\nconst PlaceholderText = styled.p`\n  margin: var(--margin-xl) 0;\n  font-size: 1rem;\n  font-weight: 500;\n  color: var(--color-text-dark);\n  max-width: 60%;\n  line-height: 1.5rem;\n  @media (max-width: 650px) {\n    font-size: 0.8rem;\n    max-width: 90%;\n    line-height: 1.3rem;\n  }\n`\n\n\nexport const ClientAssignment = () => {\n  let { t } = useTranslation();\n  const [modalContractorID, setModalContractorID] = React.useState('')\n  const { assignments: openAssignments, isLoading: openIsLoading } = useClientAssignments()\n  const { assignments, isLoading } = useClientAssignments('assigned')\n  const { assignments: closedAssignments, isLoading: closedIsLoading } = useClientAssignments('closed')\n\n  const closeModal = () => setModalContractorID('')\n\n  const openRatingModal = (contractorID: string) => setModalContractorID(contractorID)\n\n  return (\n    <div>\n      <Navbar />\n      <SyledContainer>\n        <Title>{t('common.openAssignments')}</Title>\n        {!openIsLoading && openAssignments?.length === 0 && <PlaceholderText>{t('common.openAssingmentsPlaceholder')}</PlaceholderText>}\n        <AssignmentGrid>\n          {openAssignments?.map((item) => (\n            <AssignmentItem item={item} key={item._id.$oid} state=\"open\" />\n          ))}\n        </AssignmentGrid>\n\n        <Title>{t('common.assignmentsInProzess')}</Title>\n        {!isLoading && assignments?.length === 0 && <PlaceholderText>{t('common.assignmentsInProzessPlaceholder')}</PlaceholderText>}\n        <AssignmentGrid>\n          {assignments?.map((item) => (\n            <AssignmentItem item={item} key={item._id.$oid} state=\"assigned\" />\n          ))}\n        </AssignmentGrid>\n\n        <Title>{t('common.closedAssignments')}</Title>\n        {!closedIsLoading && closedAssignments?.length === 0 && <PlaceholderText>{t('common.closedAssignmentsPlaceholder')}</PlaceholderText>}\n        <AssignmentGrid>\n          {closedAssignments?.map((item) => (\n            <AssignmentItem\n              item={item}\n              key={item._id.$oid}\n              state=\"closed\"\n              openRatingModal={openRatingModal}\n            />\n          ))}\n        </AssignmentGrid>\n\n        {modalContractorID !== '' && <RatingModal contractorID={modalContractorID} close={closeModal} />}\n      </SyledContainer>\n      <Footer />\n    </div>\n  );\n};\n","import styled from 'styled-components';\nimport { Input } from 'src/components';\n\nexport const Container = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    min-height: 300px;\n    border-radius: var(--border-radius-l);\n    padding: var(--margin-l) var(--margin-m);\n    background-color: var(--color-bg-light);\n`\n\n\nexport const Title = styled.h5`\n    max-width: 90%;\n    font-weight: 600;\n    font-size: 1.1rem;\n    color: var(--color-text-light);\n    margin-bottom: var(--margin-r);\n`\n\nexport const CompensationRow = styled.div`\n    display: flex;\n    align-items: flex-end;\n`\n\nexport const Compensation = styled.h1`\n    font-weight: 700;\n    font-size: 3rem;\n    color: var(--color-text-light);\n`\n\nexport const CompensationCurrency = styled.p`\n    font-weight: 600;\n    font-size: 1.2rem;\n    color: var(--color-text-light);\n    margin-left: var(--margin-s);\n    margin-bottom: 6pt;\n`\n\nexport const Divider = styled.div`\n  height: 1px;\n  background-color: var(--color-text-light);\n  opacity: 80%;\n  width: 100%;\n  margin-bottom: var(--margin-s);\n`\n\nexport const Label = styled.p`\n    font-weight: 600;\n    font-size: 0.8rem;\n    color: var(--color-text-dark);\n    margin-bottom: var(--margin-s);\n    text-align: right;\n`\n\nexport const Number = styled.h3`\n    font-weight: 700;\n    font-size: 1.6rem;\n    color: var(--color-text-light);\n    margin-bottom: var(--margin-s);\n`\n\nexport const NotesLabel = styled.p`\n    font-weight: 500;\n    font-size: 1rem;\n    color: var(--color-text-light);\n    margin: var(--margin-s) 0;\n`\n\nexport const Notes = styled.p`\n    font-weight: 400;\n    font-size: 0.9rem;\n    line-height: 1.2rem;\n    font-family: sans-serif, 'Montserrat';\n    color: var(--color-text-light);\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n`\n\nexport const InputRow = styled.div`\n    position: relative;\n    display: flex;\n    flex: 1;\n    margin-top: var(--margin-xl);\n    div:nth-child(1) {\n        flex: 1;\n        input {\n            z-index: 2;\n        }\n    }\n\n`\n\nexport const StyledInput = styled(Input)`\n\n`\n\nexport const SendButton = styled.div`\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    top: 0;\n    right: 0;\n    svg {\n        fill: var(--color-green);\n    }\n    width: 25pt;\n    height: 35pt;\n    cursor: pointer;\n    z-index: 3;\n`\n\nexport const CommentUserName = styled.div`\n    font-weight: 600;\n    font-size: 1rem;\n    color: var(--color-text-light);\n    margin-top: var(--margin-m);\n`\n\nexport const Comment = styled.div`\n    font-weight: 400;\n    font-size: 0.8rem;\n    color: var(--color-text-light);\n    margin-top: var(--margin-s);\n`\n","import styled from 'styled-components';\nimport { Button } from 'src/components';\n\nexport const Title = styled.h5`\n    max-width: 90%;\n    font-weight: 600;\n    font-size: 1.1rem;\n    color: var(--color-text-light);\n    margin-bottom: var(--margin-r);\n`\n\nexport const StyledButton = styled(Button)`\n    margin-top: var(--margin-r);\n`\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    border-radius: var(--border-radius-s);\n    padding: var(--margin-m);\n    background-color: var(--color-bg-light);\n    margin-top: var(--margin-m);\n`\n\nexport const SubTitle = styled.p`\n    font-weight: 400;\n    font-size: 0.7rem;\n    color: var(--color-text-dark);\n    margin-bottom: var(--margin-m);\n`\n\nexport const TableDivider = styled.div`\n  height: 1px;\n  background-color: var(--color-text-light);\n  opacity: 30%;\n  width: 100%;\n  margin: var(--margin-r) 0;\n`\n\nexport const TableRow = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex: 1;\n    justify-content: space-between;\n`\n\nexport const TableName = styled.p`\n    font-weight: 600;\n    font-size: 0.8rem;\n    color: var(--color-text-dark);\n    \n`\n\nexport const TableValue = styled.p`\n    font-weight: 500;\n    font-size: 0.8rem;\n    color: var(--color-text-light);\n`\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n// store\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from 'src/store';\nimport { setPrompt } from 'src/store/layout/actions';\nimport { PromptType } from 'src/store/layout/types';\n// components\nimport {\n    Title,\n    StyledButton,\n    Container,\n    SubTitle,\n    TableDivider,\n    TableRow,\n    TableName,\n    TableValue\n} from './client-item.styles';\n\ninterface IClientItem {\n    item: any;\n    assignmentID: string;\n    state: 'open' | 'assigned' | 'closed'\n}\n\nexport const ClientItem: React.FC<IClientItem> = ({ item, assignmentID, state }) => {\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n    const { contractorID } = useSelector((state: RootState) => state.user);\n\n    const onClickCompleteAssignment = async () => {\n        const res = await fetch(`/api/assignment/${assignmentID}/complete`, {\n            method: 'GET',\n            headers: { Authorization: `Token ${contractorID}` }\n        });\n        if (res.status === 200) {\n            dispatch(setPrompt({\n                type: PromptType.Success,\n                duration: 6000,\n                text: t('messages.assignmentCompletedSuccessfully'),\n            }))\n        } else {\n            dispatch(setPrompt({\n                type: PromptType.Error,\n                duration: 4000,\n                text: t('error.unexpectedErrorText'),\n            }))\n        }\n    }\n\n    return (\n        <Container>\n            <Title>{`${item.first_name} ${item.last_name}`}</Title>\n            <SubTitle>{item.country}</SubTitle>\n            <TableDivider />\n            <TableRow>\n                <TableName>{t('common.streetAddress')}</TableName>\n                <TableValue>{item.street_address}</TableValue>\n            </TableRow>\n            <TableDivider />\n            <TableRow>\n                <TableName>{t('common.city')}</TableName>\n                <TableValue>{item.city}</TableValue>\n            </TableRow>\n            <TableDivider />\n            <TableRow>\n                <TableName>{t('common.zip')}</TableName>\n                <TableValue>{item.postal_code}</TableValue>\n            </TableRow>\n            <TableDivider />\n            <TableRow>\n                <TableName>{t('common.email')}</TableName>\n                <TableValue>{item.email}</TableValue>\n            </TableRow>\n            <TableDivider />\n            <TableRow>\n                <TableName>{t('common.phoneNumber')}</TableName>\n                <TableValue>{item.phone_number}</TableValue>\n            </TableRow>\n            <TableDivider />\n\n            {state === 'assigned' && <StyledButton onClick={onClickCompleteAssignment}>{t('common.assignmentCompleted')}</StyledButton>}\n        </Container>\n    );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n// store\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from 'src/store';\nimport { setPrompt } from 'src/store/layout/actions';\nimport { PromptType } from 'src/store/layout/types';\n// components\nimport {\n    Container,\n    Title,\n    Compensation,\n    CompensationRow,\n    CompensationCurrency,\n    Divider,\n    Label,\n    Number,\n    NotesLabel,\n    Notes,\n    StyledInput,\n    SendButton,\n    InputRow,\n    CommentUserName,\n    Comment\n} from './assignment-item.style';\nimport { getCurrency } from 'src/services/currency';\nimport { ClientItem } from './client-item';\nimport { Icon } from 'src/components';\n\ninterface IAssignmentItem {\n    item: any\n    state: 'open' | 'assigned' | 'closed'\n}\n\nexport const AssignmentItem: React.FC<IAssignmentItem> = ({ item, state }) => {\n    console.log(item);\n    const dispatch = useDispatch();\n    const { t } = useTranslation();\n    const { contractorID } = useSelector((state: RootState) => state.user);\n    const [comment, setComment] = React.useState<string>(\"\")\n\n    const onClickSendComment = async () => {\n        const res = await fetch(`/api/assignment/${item._id.$oid}/comment`, {\n            method: 'POST',\n            headers: {\n                Authorization: `Token ${contractorID}`\n            },\n            body: JSON.stringify({ text: comment })\n        });\n        if (res.status === 201) {\n            setComment('')\n            dispatch(setPrompt({\n                type: PromptType.Success,\n                duration: 4000,\n                text: t('messages.commentCreatedSuccessfully'),\n            }));\n        } else {\n            dispatch(setPrompt({\n                type: PromptType.Error,\n                duration: 4000,\n                text: t('error.unexpectedErrorText'),\n            }));\n        }\n    }\n\n    return (\n        <Container>\n            <Title>\n                {item.title}\n            </Title>\n            <CompensationRow>\n                <Compensation>\n                    {item.compensation}\n                </Compensation>\n                <CompensationCurrency>\n                    {getCurrency(item.currency)}\n                </CompensationCurrency>\n            </CompensationRow>\n            <Divider />\n            <Label>{t('common.compensation').toUpperCase()}</Label>\n            <Number>{item.comments?.length}</Number>\n            <Divider />\n            <Label>{t('common.comments').toUpperCase()}</Label>\n            {item.notes !== undefined && (\n                <>\n                    <NotesLabel>\n                        {t('common.notes') + \":\"}\n                    </NotesLabel>\n                    <Notes>\n                        {item.notes}\n                    </Notes>\n                </>\n            )}\n            <ClientItem\n                item={item.client}\n                assignmentID={item._id.$oid}\n                state={state}\n            />\n            {state !== 'closed' && (\n                <InputRow>\n                    <StyledInput\n                        value={comment}\n                        onChange={setComment}\n                        label={t('assignment.writeComment')}\n                    />\n                    <SendButton onClick={onClickSendComment}>\n                        <Icon name=\"send\" size=\"16pt\" />\n                    </SendButton>\n                </InputRow>\n            )}\n            {item.comments.map((comment, index) => (\n                <div key={index}>\n                    <CommentUserName>{comment.user_name}</CommentUserName>\n                    <Comment>{comment.text}</Comment>\n                </div>\n            ))}\n        </Container>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useTranslation } from 'react-i18next';\nimport { Container, Footer, Navbar } from 'src/components';\nimport { useContractorAssignments } from 'src/data/hooks';\nimport { AssignmentItem } from './components/assignment-item';\n\nconst SyledContainer = styled(Container)`\n  min-height: 100vh;\n`;\n\nconst AssignmentGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-row-gap: var(--margin-l);\n  grid-column-gap: var(--margin-m);\n  margin-top: var(--margin-xl);\n  @media (max-width: 1050px) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n`\n\nconst Title = styled.h1`\n  font-size: 2.4rem;\n  font-weight: 700;\n  color: var(--color-text-light);\n  margin-top: var(--margin-xl);\n  @media (max-width: 650px) {\n    font-size: 2rem;\n  }\n  @media (max-width: 450px) {\n    font-size: 1.6rem;\n  }\n`\n\nconst PlaceholderText = styled.p`\n  margin: var(--margin-xl) 0;\n  font-size: 1rem;\n  font-weight: 500;\n  color: var(--color-text-dark);\n  max-width: 60%;\n  line-height: 1.5rem;\n  @media (max-width: 650px) {\n    font-size: 0.8rem;\n    max-width: 90%;\n    line-height: 1.3rem;\n  }\n`\n\n\nexport const ContractorAssignment = () => {\n  let { t } = useTranslation();\n  const { assignments, isLoading } = useContractorAssignments()\n  const { assignments: closedAssignments, isLoading: closedIsLoading } = useContractorAssignments('closed')\n\n  return (\n    <div>\n      <Navbar />\n      <SyledContainer>\n        <Title>{t('common.yourAssignments')}</Title>\n        {!isLoading && assignments?.length === 0 && <PlaceholderText>{t('common.yourAssignmentsPlaceholder')}</PlaceholderText>}\n        <AssignmentGrid>\n          {assignments?.map((item) => (\n            <AssignmentItem item={item} key={item._id.$oid} state=\"assigned\" />\n          ))}\n        </AssignmentGrid>\n\n        <Title>{t('common.closedAssignments')}</Title>\n        {!closedIsLoading && closedAssignments?.length === 0 && <PlaceholderText>{t('common.closedAssignmentsPlaceholderContractor')}</PlaceholderText>}\n        <AssignmentGrid>\n          {closedAssignments?.map((item) => (\n            <AssignmentItem item={item} key={item._id.$oid} state=\"closed\" />\n          ))}\n        </AssignmentGrid>\n\n      </SyledContainer>\n      <Footer />\n    </div>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\n// assets\nimport { Icon } from 'src/components';\n\ninterface IModalProps {\n  onClose: () => any;\n  children: JSX.Element;\n}\n\nconst Container = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n`;\n\nconst StyledIcon = styled(Icon)`\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: var(--navbar-height);\n  top: 0;\n  left: 0;\n  padding-left: var(--margin-l);\n  cursor: pointer;\n  svg {\n    fill: var(--color-text-light);\n  }\n  @media (max-width: 625px) {\n    padding-left: var(--margin-r);\n  }\n`;\n\nconst Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #00000077;\n`;\n\nexport const Modal: React.FC<IModalProps> = ({ children, onClose }) => (\n  <Container>\n    <Overlay />\n    {children}\n    <StyledIcon name=\"close\" onClick={onClose} size=\"26pt\" />\n  </Container>\n);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setPrompt } from 'src/store/layout/actions';\nimport { RootState } from 'src/store';\nimport { PromptType } from 'src/store/layout/types';\n\ninterface IStyleProps {\n    color: string;\n}\n\nexport const Container = styled.div<IStyleProps>`\n  position: fixed;\n  top: 8%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  border-radius: var(--border-radius-m);\n  padding: var(--margin-r) 12pt;\n  animation-name: animatetop;\n  animation-duration: 0.3s;\n  width: 80vw;\n  max-width: 400px;\n  background-color: ${({ color }) => color};\n  z-index: 2;\n  box-shadow: 0px 0px 20px #00000099;\n\n  @keyframes animatetop {\n    from {\n      top: -5%;\n    }\n    to {\n      top: 8%;\n    }\n  }\n`;\n\nconst Text = styled.p`\n    color: var(--color-text-light); \n    font-size: 0.9rem;\n    line-height: 1.2rem;\n    font-weight: 500;\n`\n\nexport const Prompt = () => {\n    const [color, setColor] = React.useState<string>(\"\")\n    const dispatch = useDispatch();\n    const { prompt } = useSelector((state: RootState) => state.layout);\n\n    React.useEffect(() => {\n        if (prompt !== undefined) {\n            if (prompt?.type === PromptType.Error) {\n                setColor(\"var(--color-red)\")\n            } else if (prompt?.type === PromptType.Info) {\n                setColor(\"var(--color-yellow)\")\n            } else {\n                setColor(\"var(--color-green)\")\n            }\n            setTimeout(() => {\n                dispatch(setPrompt(undefined))\n            }, prompt?.duration);\n        }\n    }, [prompt]);\n\n    return (\n        <Container color={color}>\n            <Text>{prompt?.text}</Text>\n        </Container>\n    )\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setAlert } from 'src/store/layout/actions';\nimport { RootState } from 'src/store';\nimport { Button } from 'src/components';\n\n\nconst Container = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  border-radius: var(--border-radius-l);\n  padding: var(--margin-l) var(--margin-m);\n  animation-name: animatetop;\n  animation-duration: 0.3s;\n  width: 80vw;\n  max-width: 450pt;\n  background-color: var(--color-text-light);\n  z-index: 2;\n  box-shadow: 0px 0px 20px #00000099;\n\n  @keyframes animatetop {\n    from {\n      top: 60%;\n    }\n    to {\n      top: 50%;\n    }\n  }\n`;\n\nexport const Title = styled.h5`\n    font-weight: 700;\n    font-size: 1.2rem;\n    color: var(--color-bg-dark);\n    margin-bottom: var(--margin-r);\n`\n\nconst Text = styled.p`\n    color: var(--color-bg-dark); \n    font-size: 0.9rem;\n    line-height: 1.2rem;\n    font-weight: 500;\n`\n\nexport const ButtonRow = styled.div`\n    display: flex;\n    width: 100%;\n    margin-top: var(--margin-l);\n`\n\nexport const PrimaryButton = styled(Button)`\n  background-color: var(--color-bg-dark);\n  margin-left: var(--margin-r);\n  flex: 1;\n  color: var(--color-text-light);\n`\n\nexport const SecondaryButton = styled(Button)`\n  background-color: transparent;\n  border: 2px solid var(--color-bg-dark);\n  color:  var(--color-bg-dark);\n  flex: 1;\n`\n\nexport const Alert = () => {\n    const dispatch = useDispatch();\n    const { alert } = useSelector((state: RootState) => state.layout);\n\n    const onClickClose = () => {\n        dispatch(setAlert(undefined))\n    }\n\n    const onClickConfirm = () => {\n        if (alert?.onClick) {\n            alert?.onClick()\n        }\n        dispatch(setAlert(undefined))\n    }\n\n    return (\n        <Container>\n            <Title>{alert?.title}</Title>\n            <Text>{alert?.text}</Text>\n            <ButtonRow>\n                <SecondaryButton onClick={onClickClose}>\n                    {alert?.cancel}\n                </SecondaryButton>\n                <PrimaryButton onClick={onClickConfirm}>\n                    {alert?.confirm}\n                </PrimaryButton>\n            </ButtonRow>\n        </Container>\n    )\n}\n","import styled from 'styled-components';\ninterface StyleProps {\n  isOpen?: boolean;\n  isActive?: boolean;\n  isBlurred?: boolean;\n}\n\nexport const RootContainer = styled.main<StyleProps>`\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n  filter: ${({ isBlurred }) => (isBlurred ? 'blur(60px)' : undefined)};\n  transition: filter 0.2s ease-in-out;\n`;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n// store\nimport { RootState } from 'src/store';\nimport { closeModal } from 'src/store/layout/actions';\nimport { setClient, setContractor } from 'src/store/user/actions';\n// assets\nimport { Modal } from './components/modal';\nimport { Prompt } from './components/prompt';\nimport { Alert } from './components/alert';\nimport { RootContainer } from './root.styles';\n\ninterface MenuProps {\n  children: JSX.Element;\n}\n\nexport const Root: React.FC<MenuProps> = ({ children }) => {\n  // get the current route\n  const dispatch = useDispatch();\n  const layout = useSelector((state: RootState) => state.layout);\n  const { modalIsVisible, modalContent, prompt, alert } = layout;\n\n  const onCloseModal = () => dispatch(closeModal());\n\n  React.useEffect(() => {\n    const clientID = localStorage.getItem('client_id')\n    if (clientID) {\n      dispatch(setClient(clientID))\n    } else {\n      const contractorID = localStorage.getItem('contractor_id')\n      if (contractorID) {\n        dispatch(setContractor(contractorID))\n      }\n    }\n  }, []);\n\n  return (\n    <>\n      <RootContainer isBlurred={modalIsVisible}>\n        {children}\n      </RootContainer>\n      {modalContent !== null && <Modal onClose={onCloseModal}>{modalContent}</Modal>}\n      {prompt !== undefined && <Prompt />}\n      {alert !== undefined && <Alert />}\n    </>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useTranslation } from 'react-i18next';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  width: 100%;\n  background-color: var(--color-bg-regular);\n`;\n\nconst Title = styled.h1`\n  font-size: 4rem;\n  font-weight: 800;\n  color: var(--color-text-light);\n  text-align: center;\n`;\n\nconst Error = styled.h3`\n  font-size: var(--font-size-h3);\n  font-weight: 500;\n  color: var(--color-text-dark);\n  text-align: center;\n  margin: var(--margin-m) var(--margin-l);\n  max-width: 500pt;\n`;\n\nexport const NotFound = () => {\n  let { t } = useTranslation();\n  return (\n    <Container>\n      <Title>{t('error.notFound')}</Title>\n      <Error>{t('error.notFoundText')}</Error>\n    </Container>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useTranslation } from 'react-i18next';\n\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  width: 100%;\n  background-color: var(--color-bg-regular);\n`;\n\nconst Title = styled.h1`\n  font-size: 4.5rem;\n  font-weight: 800;\n  color: var(--color-text-light);\n  text-align: center;\n`;\n\nconst Error = styled.h3`\n  font-size: var(--font-size-h3);\n  font-weight: 500;\n  color: var(--color-text-dark);\n  text-align: center;\n  margin: var(--margin-m) var(--margin-l);\n  max-width: 500pt;\n`;\n\nexport const UnexpectedError = () => {\n  let { t } = useTranslation();\n\n  return (\n    <Container>\n      <Title>{t('error.unexpectedError')}</Title>\n      <Error>{t('error.unexpectedErrorText')}</Error>\n    </Container>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useTranslation } from 'react-i18next';\nimport { Container, Footer, Navbar } from 'src/components'\n\n\nconst StyledContainer = styled(Container)`\n  min-height: 80vh;\n`;\n\nconst Title = styled.h1`\n  font-size: 2.4rem;\n  font-weight: 700;\n  color: var(--color-text-light);\n  margin-bottom: var(--margin-xl);\n  margin-top: var(--margin-xl);\n  @media (max-width: 650px) {\n    font-size: 2rem;\n  }\n  @media (max-width: 450px) {\n    font-size: 1.6rem;\n  }\n`;\n\nconst Text = styled.p`\n    font-size: 1rem;\n    font-weight: 400;\n    color: var(--color-text-dark);\n    line-height: 1.5rem;\n    margin-bottom: var(--margin-m);\n    max-width: 80%;\n`\n\nexport const PrivacyPolicy = () => {\n\n    return (\n        <div>\n            <Navbar />\n            <StyledContainer>\n                <Title>Datenschutzerklärung</Title>\n                <Text>Dieses Projekt ist Open-Source. Welche Daten wie genau gespeichert werden, kannst du dir auf GitHub ansehen.</Text>\n                <Text>Wir verwenden keine Cookies, solange du keinen Auftrag erstellst und keinen Drucker registrierst, dann liegen uns keine Informationen zu dir vor. Wenn du jedoch diese Funktionen verwendest, speichern wir in der Local Storage auf deinem Browser eine automatisch generierte ID für dich ab. Diese ID wird anschließend immer als Referenz verwendet, wenn du mit der Plattform interagierst.</Text>\n                <Text>Was wir über dich speichern? Alles, was du freiwillig angibst: Vorname, Nachname, Land, Email, Telefonnummer, Adresse, Stadt, Postleitzahl</Text>\n                <Text>Falls du dich dazu entscheiden solltest, die Plattform nicht mehr zu nutzen, hast du selbstverständlich das Recht auf eine vollständige Löschung deiner Daten. Dazu benötigen wir deinen Namen und deine Adresse. Solltest du einen neuen Account erstellen wollen würden wir dir empfehlen die Local Storage zu leeren. Möchtest du lediglich einen neuen Account erstellen, empfehlen wir dir, die Local Storage zu leeren. Danach können wir deinen Browser nicht mehr zuweisen. Viel Spaß beim Verwenden der Cuborr-Plattform.</Text>\n            </StyledContainer>\n            <Footer />\n        </div>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useTranslation } from 'react-i18next';\nimport { Container, Footer, Navbar } from 'src/components'\n\n\nconst StyledContainer = styled(Container)`\n  min-height: 80vh;\n`;\n\nconst Title = styled.h1`\n  font-size: 2.4rem;\n  font-weight: 700;\n  color: var(--color-text-light);\n  margin-bottom: var(--margin-xl);\n  margin-top: var(--margin-xl);\n  @media (max-width: 650px) {\n    font-size: 2rem;\n  }\n  @media (max-width: 450px) {\n    font-size: 1.6rem;\n  }\n`;\n\nconst Text = styled.p`\n    font-size: 1rem;\n    font-weight: 400;\n    color: var(--color-text-dark);\n    line-height: 1.5rem;\n    margin-bottom: var(--margin-m);\n    max-width: 80%;\n`\n\nexport const CompanyDetails = () => {\n\n    return (\n        <div>\n            <Navbar />\n            <StyledContainer>\n                <Title>Impressum</Title>\n                <Text>Angaben gemäß § 5 TMG:</Text>\n                <Text>Konstantin Paulus</Text>\n                <Text>Am Mühlbach 7</Text>\n                <Text>85748 Garching</Text>\n                <Text>+49 170 2244007</Text>\n                <Text>mail@konstantinpaulus.de</Text>\n            </StyledContainer>\n            <Footer />\n        </div>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Container, Footer, Navbar } from 'src/components'\n\n\nconst StyledContainer = styled(Container)`\n  min-height: 80vh;\n`;\n\nconst Title = styled.h1`\n  font-size: 2.4rem;\n  font-weight: 700;\n  color: var(--color-text-light);\n  margin-bottom: var(--margin-r);\n  margin-top: var(--margin-xl);\n  @media (max-width: 650px) {\n    font-size: 2rem;\n  }\n  @media (max-width: 450px) {\n    font-size: 1.6rem;\n  }\n`;\n\nconst Caption = styled.p`\n    font-size: 0.8rem;\n    font-weight: 400;\n    color: var(--color-text-dark);\n    margin-bottom: var(--margin-l);\n`\n\nconst SectionTitle = styled.h1`\n  font-size: 1.4rem;\n  font-weight: 600;\n  color: var(--color-text-light);\n  margin-bottom: var(--margin-m);\n  margin-top: var(--margin-m);\n`;\n\nconst ArticleTitle = styled.h1`\n  font-size: 1.2rem;\n  font-weight: 500;\n  color: var(--color-text-light);\n  margin-bottom: var(--margin-m);\n`;\n\nconst Text = styled.p`\n    font-size: 1rem;\n    font-weight: 400;\n    color: var(--color-text-dark);\n    line-height: 1.5rem;\n    margin-bottom: var(--margin-l);\n    max-width: 80%;\n`\n\nconst List = styled.ul`\n  font-size: 1rem;\n  font-weight: 400;\n  color: var(--color-text-dark);\n  line-height: 1.5rem;\n  margin-bottom: var(--margin-r);\n  max-width: 80%;\n  li {\n    margin-left: var(--margin-m);\n    margin-bottom: var(--margin-r);\n  }\n`\n\nexport const TermsAndConditions = () => {\n\n  return (\n    <div>\n      <Navbar />\n      <StyledContainer>\n        <Title>Allgemeine Geschäftsbedingungen</Title>\n        <Caption>Datum des Inkrafttretens: 5. April 2021 </Caption>\n\n        <SectionTitle>1. Gegenstand</SectionTitle>\n        <Text>CUBORR ist eine Plattform, die über die Website unter der Adresse www.cuborr.com oder in Form einer mobilen Anwendung zugänglich ist und dazu dient, Personen bzw. Haushalte, welche einen 3D-Drucker besitzen und diesen höchstens nur noch unregelmäßig in Gebrauch nehmen, mit Leuten in Kontakt zu bringen, die mit einer konkreten Vorstellung eines für den Eigengebrauch zu druckenden 3D-Modells aufwarten, dieses aber mangels Endgerät nicht selbst produzieren können. Für diese Auftraggeber steht somit ein Tool zur Verfügung, über CUBORR autorisierte Angebote zu nutzen und das gedruckte Modell zugesandt zu bekommen.\n          Diese Allgemeinen Geschäftsbedingungen regeln Zugang und Nutzung der Plattform.\n          Beachte bitte insbesondere, dass CUBORR zu keinem Zeitpunkt Partei eines Vertrages oder einer sonstigen Vereinbarung wird, die zwischen Mitgliedern geschlossen wird.\n          Mit dem Klicken auf „Drucker registrieren“ oder „Jetzt kostenlos Auftrag erstellen“ bestätigst du, diese AGB gelesen und akzeptiert zu haben.\n        </Text>\n\n        <SectionTitle>2. Anmeldung auf der Plattform und Anlegen eines Kontos</SectionTitle>\n        <ArticleTitle>2.1. Anmeldebedingungen auf der Plattform</ArticleTitle>\n        <Text>\n          Die Plattform kann von Privatpersonen Vollendung des 18. Lebensjahres genutzt werden. Die Anmeldung eines Minderjährigen auf der Plattform ist strengstens untersagt. Mit dem Zugriff auf die Plattform, ihrer Nutzung oder Registrierung bestätigst du, das 18. Lebensjahr vollendet zu haben.\n        </Text>\n        <ArticleTitle>2.2. Anlegen eines Kontos</ArticleTitle>\n        <Text>\n          Auf der Plattform können Mitglieder Anzeigen schalten und sich mit anderen Mitgliedern austauschen, um einen 3D-Druckaufträge zu buchen. Anzeigen sind generell sichtbar, auch für Personen, die nicht auf der Plattform angemeldet sind. Allerdings können nur Personen eine Anzeige schalten oder einen Auftrag buchen, wenn sie zuvor ein Konto angelegt haben und Mitglied geworden sind.\n        </Text>\n        <Text>\n          Zur Anmeldung auf der Plattform musst du diese AGB sowie unsere Datenschutzerklärung gelesen und akzeptiert haben.\n          Du bist dazu verpflichtet, auf deinem Profil wahrheitsgemäße Angaben zu machen und diese, während der Vertragsbeziehungen mit CUBORR auf dem neuesten Stand zu halten. Du kannst Ihre Angaben jederzeit im Profil aktualisieren.\n        </Text>\n        <Text>\n          Mit deiner Anmeldung verpflichtest du dich außerdem, dein Passwort geheim zu halten und es an niemanden weiterzugeben. Wenn du dein Passwort verlierst oder sonst einem Dritten offenlegst, verpflichtest du dich, CUBORR unverzüglich zu benachrichtigen. Für die Nutzung deines Kontos durch Dritte bist ausschließlich du verantwortlich, es sei denn, du hast CUBORR ausdrücklich über den Verlust, die betrügerische Nutzung durch einen Dritten oder die Offenlegung deines Passworts gegenüber einem Dritten benachrichtigt.\n        </Text>\n        <Text>\n          Du verpflichtest dich, weder unter deinem eigenen Namen noch mit dem Namen eines Dritten, weitere Konten neben deinem ursprünglich angelegten Konto zu unterhalten.\n        </Text>\n\n        <SectionTitle>3. Nutzung der Leistungen</SectionTitle>\n        <ArticleTitle>3.1. Schalten von Anzeigen</ArticleTitle>\n        <Text>\n          Sofern du die nachstehenden Bedingungen erfüllst, kannst du als Mitglied Angebote auf der Plattform erstellen und veröffentlichen, indem du Daten über den von dir genutzten 3D-Drucker eingibst. Eine Anzeige darf nur erstellt und veröffentlicht werden, wenn du alle der nachfolgenden Bedingungen erfüllst:\n        </Text>\n        <List>\n          <li>Du verfügst über einen funktionierenden 3D-Drucker;</li>\n          <li>Du bietest nur Angebote für den 3D-Drucker an, der dir gehört oder den du mit der ausdrücklichen Erlaubnis des Besitzers nutzen darfst und zur Nutzung für Ausdrucke für Dritte berechtigt bist;</li>\n          <li>Du darfst und kannst in naheliegender Zukunft über den 3D-Drucker verfügen, für den eine Anzeige geschaltet wird;</li>\n          <li>Du besitzt ausreichend Druckverbrauchsmaterial, um die 3D-Ausdrucke zu verwirklichen;</li>\n          <li>Es besteht für Dich die Möglichkeit, die gedruckte Ware innerhalb kurzer Zeit zu versenden;</li>\n          <li>Der 3D-Drucker wird in gutem Betriebszustand benutzt, die den geltenden Gesetzen entsprechen und liefert reproduzierbare qualitativ gute Ergebnisse;</li>\n        </List>\n        <Text>\n          Für den Inhalt des von dir auf der Plattform geschalteten Angebots bist ausschließlich du selbst verantwortlich. Die in der Anzeige enthaltenen Angaben müssen daher der Wahrheit entsprechen und du verpflichtest dich, den Ausdruck bzgl. des Druckmaterials unter den in der Anzeige angegebenen Bedingungen zu bewerkstelligen.\n          Zusätzlich gilt, dass die Plattform für die Buchung von 3D-Drucken für Privatpersonen bestimmt ist. Das Anbieten eines 3D-Drucks durch einen nicht im Privatbesitz befindlichen Druckers ist untersagt.\n        </Text>\n        <Text>\n          Sofern deine Anzeige diesen AGB entspricht, wird sie auf der Plattform veröffentlicht und ist damit sowohl für Mitglieder als auch für Nicht-Mitglieder sichtbar, die eine Suche auf der Plattform oder auf der Website durchführen. CUBORR behält sich das Recht vor, in eigenem Ermessen und ohne Vorankündigung eine Anzeige nicht zu veröffentlichen bzw. jederzeit zu entfernen, die nicht den AGB entspricht, oder die sonst für schädlich für das Image der Plattform oder das seiner Leistungen gehalten wird.\n        </Text>\n        <ArticleTitle>3.2. Buchung eines Auftrags</ArticleTitle>\n        <Text>\n          CUBORR hat ein System zur Online-Buchung von Aufträgen, die auf der Plattform angeboten werden, eingerichtet.\n        </Text>\n        <Text>\n          Wenn ein Auftraggeber sich für ein Druckangebot interessiert, kann er online eine Buchungsanfrage stellen. Daraufhin treten die Vertragsparteien miteinander in Kontakt und können die Buchung über das System abwickeln. Hierbei einigt man sich ebenfall über Preis und Umfang der zu erbringenden Leistung. Liegen übereinstimmende Verabredungen vor, erhält der Auftragnehmer eine Buchungsbestätigung. \n        </Text>\n        <Text>\n          Mit der Buchungsbestätigung sendet CUBORR beiden Parteien eine E-Mail, in der die Auftragsdetails aufgeführt sind. Danach bist ausschließlich du selbst für die Erfüllung des verbindlichen Vertrages gegenüber dem anderen Mitglied verantwortlich.\n        </Text>\n        <ArticleTitle>3.3. Bewertungssystem</ArticleTitle>\n        <Text>3.3.1. Funktionsweise</Text>\n        <Text>\n          CUBORR freut sich, wenn du eine Bewertung über einen Auftragnehmer (wenn du ein Auftraggeber bist) oder über einen Auftraggeber (wenn du ein Auftragnehmer bist) abgibst, mit dem du ein erfolgreiches Geschäft abgeschlossen hast oder ein Geschäft hätte zustande kommen sollen. Allerdings ist es dir nicht erlaubt, eine Bewertung über ein anderes Mitglied zu hinterlassen, wenn du mit diesem keinen Vertrag eingegangen bist.\n        </Text>\n        <Text>\n          Deine Bewertung und die vom anderen Mitglied über dich hinterlassene Bewertung, sofern vorhanden, werden auf der Plattform nach folgendem Zeitraum veröffentlicht: Direkt, nachdem beide Vertragspartner eine Bewertung hinterlassen haben oder (ii) nach 7 Tagen, wenn bis dahin nur eine Bewertung erfolgt ist.\n        </Text>\n        <Text>\n          In besonderen Fällen hast du die Möglichkeit, auf eine Bewertung zu antworten, die ein anderes Mitglied in deinem Profil hinterlassen hat. Die Bewertung und eventuelle Antwort werden in deinem Profil veröffentlicht.\n        </Text>\n        <Text>3.3.2. Moderation</Text>\n        <Text>\n          Du bist damit einverstanden, dass CUBORR jede Bewertung bzw. Kommentar nicht veröffentlichen oder löschen kann, wenn der Inhalt gegen die AGB verstößt.\n        </Text>\n        <Text>3.3.3. Beschränkung</Text>\n        <Text>\n          CUBORR behält sich das Recht vor, dein Konto vorübergehend zu sperren, sofern du über mehrere Bewertungen hinweg ausschließlich durchschnittliche Rückmeldungen erhalten hast.\n        </Text>\n        <SectionTitle>4. Finanzielle Konditionen</SectionTitle>\n        <Text>\n          Der Zugang zur Plattform, die Anmeldung, die Suche, die Ansicht und das Schalten von Anzeigen sind kostenfrei. \n        </Text>\n        <Text>\n          Der Kostenbeitrag bei einem zustande gekommenen Kauf wird von dir als Auftragnehmer unter deiner alleinigen Verantwortung bestimmt. Es ist allerdings untersagt, die Plattform in irgendeiner Form zu nutzen, um damit auf lange Sicht Gewinne zu erzielen. Du verpflichtest dich damit, den Kostenbeitrag, dessen Zahlung du von deinem Auftraggeber verlangst, auf die Betriebskosten des Druckers, seinem Zubehör, dessen Anschaffungspreis sowie sonstige sich darum drehende von dir erfüllte Leistungen (z.B. Versand) und Kosten zu beschränken, die dir effektiv dadurch entstehen. \n        </Text>\n        <Text>\n          Du verpflichtest dich somit dazu, die Plattform und Leistungen von CUBORR ausschließlich zur Kontaktaufnahme und nicht zur Gewinnerzielung oder zu gewerblichen Zwecken zu nutzen.\n        </Text>\n        <Text>\n          CUBORR behält sich das Recht vor, dein Konto vorübergehend zu sperren, den Zugriff auf Leistungen zu beschränken oder, in schweren Fällen, deine Mitgliedschaft zu beenden, sofern deine Aktivität auf dieser Plattform aufgrund der Art der angebotenen Aufträge oder der Häufigkeit Grund zur Annahme geben, dass du einen Gewinn erzielen oder einen Gewinn erzielen möchtest.\n        </Text>\n        <SectionTitle>5. Verhalten von Nutzern der Plattform und Mitgliedern</SectionTitle>\n        <Text>\n          Du hast die alleinige Verantwortung für die Einhaltung aller Gesetze, Vorschriften und Verpflichtung, die auf deine Nutzung der Plattform Anwendung finden.\n        </Text>\n        <Text>\n          Weiterhin verpflichtest du dich bei der Nutzung der Plattform und im gegenseitigen Austausch zu Folgendem:\n        </Text>\n        <List>\n          <li>die Plattform nicht für berufliche, gewerbliche oder gewinnorientierte Zwecke zu nutzen;</li>\n          <li>cuborr (insbesondere beim Anlegen oder Aktualisieren deines Kontos) oder anderen Mitgliedern keine falschen, irreführenden, arglistigen oder betrügerischen Angaben zu kommunizieren;</li>\n          <li>sich weder auf eine Weise zu äußern oder zu verhalten oder irgendeinen Inhalt auf der Plattform zu veröffentlichen, der diffamierend, beleidigend, obszön, pornographisch, vulgär, anstößig, aggressiv, unerwünscht, gewalttätig, bedrohlich, belästigend, rassistisch oder ausländerfeindlich ist oder sexuelle Konnotationen beinhaltet, zu Gewalt, Diskriminierung oder Hass aufruft, Aktivitäten im Zusammenhang mit oder dem Konsum von illegalen Substanzen fördert oder der ganz allgemein gegen die Zweckbestimmung der Plattform verstößt, die Rechte von CUBORR oder eines Dritten verletzt oder gegen die guten Sitten verstoßen kann;</li>\n          <li>nicht die Rechte von cuborr, insbesondere ihre Bildrechte oder sonst geistige Eigentumsrechte zu verletzen;</li>\n          <li>nicht mehr als ein Konto auf der Plattform zu eröffnen und kein Konto auf den Namen eines Dritten zu eröffnen;</li>\n          <li>diese AGB und die Datenschutzrichtlinie zu beachten;</li>\n        </List>\n\n        <SectionTitle>6. Geistiges Eigentumsrecht</SectionTitle>\n        <ArticleTitle>6.1. Von CUBORR veröffentlichter Content</ArticleTitle>\n        <Text>\n          Vorbehaltlich der von Mitgliedern zur Verfügung gestellten Inhalten ist CUBORR der alleinige Inhaber sämtlicher geistigen Eigentumsrechte in Bezug auf die Leistungen, die Plattform, deren Inhalte (insbesondere Texte, Bilder, Designs, Logos, Töne, Daten, Grafiken) und der seinem Betrieb gewährleistenden Software und Datenbanken.\n        </Text>\n        <Text>\n          CUBORR gewährt dir ein nicht exklusives, persönliches und nicht übertragbares Nutzungsrecht der Plattform und der Leistungen für deinen persönlichen und privaten Gebrauch auf nicht gewerblicher Basis und gemäß den Zweckbestimmungen der Plattform und der Leistungen.\n        </Text>\n        <Text>\n          Jegliche anderweitige Nutzung der Plattform und der Leistungen sowie Nutzung und Verwertung deren Inhalte ohne die vorherige schriftliche Erlaubnis von CUBORR ist untersagt. \n        </Text>\n        <ArticleTitle>6.2. Von dir auf der Plattform veröffentlichte Inhalte</ArticleTitle>\n        <Text>\n          Um die Bereitstellung des Services zu ermöglichen und entsprechend der Zweckbestimmung der Plattform gewährst du CUBORR eine nicht exklusive Nutzungslizenz der Inhalte und Daten, die du im Zusammenhang mit deiner Nutzung des Dienstes bereitgestellt hast (nachstehend bezeichnet als Ihr „Mitglieds-Content“), um CUBORR die Bereitstellung der Inhalte auf der Plattform für die Öffentlichkeit über das digitale Netzwerk und gemäß jedem beliebigen Kommunikationsprotokoll (insbesondere Internet und mobiles Netzwerk) zum Zwecke der Bereitstellung der Plattform und der Leistungen zu ermöglichen. Diese Nutzungslizenz gilt für die Dauer des Bestehens deines Accounts bei cuborr. Du erlaubest CUBORR insbesondere Mitglieds-Content wie folgt zu reproduzieren, darzustellen, anzupassen und zu übersetzen:\n        </Text>\n        <List>\n          <li>\n            Du gestattest CUBORR die vollständige oder teilweise Wiedergabe deines Mitglieds-Contents auf jeglichen digitalen bekannten oder derzeitig noch unbekannten Aufzeichnungsmedien und insbesondere auf jeglichem Server, Festplatte, Speicherkarte oder sonstigen äquivalenten Medien, ganz gleich, in welchem Format und durch welchen bekannten oder bisher unbekannten Prozess, soweit dies für einen Speicher-, Backup-, Übertragungs- oder Downloadvorgang notwendig ist, der mit dem Betrieb der Plattform und der Bereitstellung des Dienstes verbunden ist;\n          </li>\n          <li>\n            Du gestattest CUBORR die erforderliche Anpassung und Übersetzung Ihres Mitglieds-Contents und die Wiedergabe dieser Anpassungen auf jedem digitalen aktuellen oder zukünftigen, im obigen Punkt genannten Medium mit der Zielsetzung, die Plattform und die Leistungen insbesondere in verschiedenen Sprachen bereitzustellen. Dieses Recht schließt insbesondere die Option zur Vornahme von Abänderungen an der Formatierung Ihres Mitglieds-Contents in Bezug auf Ihre Urheberpersönlichkeitsrechte für die Einhaltung der graphischen Vorgaben der Plattform und / oder ihrer technischen Kompatibilität mit einer Anzeige ihrer Veröffentlichung über die Plattform ein.\n          </li>\n        </List>\n\n        <SectionTitle>7. Die Rolle von cuborr</SectionTitle>\n        <Text>\n          CUBORR ist keine Partei in irgendeiner Vereinbarung zwischen dir und anderen Mitgliedern. CUBORR weist dich darauf hin, dass die Gültigkeit, Richtigkeit oder Gesetzmäßigkeit der Anzeigen, angebotenen Aufträge von CUBORR nicht kontrolliert wird. Die Aufgaben von CUBORR beschränken sich auf die Bereitstellung des Zugangs zur Nutzung der Plattform.\n        </Text>\n        <Text>\n          Die Mitglieder handeln in eigener Verantwortung.\n        </Text>\n        <Text>\n          CUBORR übernimmt in seiner Eigenschaft als Vermittler keinerlei Haftung für die Durchführung eines Druckauftrags. Dies gilt insbesondere für das Vorliegen oder Eintreffen einer der folgenden Fälle:\n        </Text>\n        <List>\n          <li>falschen Angaben, die vom Auftragnehmer in seiner Anzeige oder sonst in Bezug auf den Auftrag und seine Bedingungen gemacht werden;</li>\n          <li>Stornierung oder Änderung eines Auftrags durch ein Mitglied</li>\n          <li>Zahlungsausfall des Kostenbeitrags seitens eines Auftraggebers;</li>\n          <li>des Verhaltens seiner Mitglieder während, vor oder nach den Vertragsverhandlungen.</li>\n        </List>\n        <SectionTitle>8. Betrieb, Verfügbarkeit und Funktionalitäten der Plattform</SectionTitle>\n        <Text>\n          CUBORR versucht, soweit wie möglich, den Zugriff auf die Plattform 7 Tage die Woche und 24 Stunden am Tag zu ermöglichen. Nichtsdestotrotz kann es vorübergehend und ohne Vorankündigung aufgrund von technischen Wartungsarbeiten, Migration von Daten, Updates oder sonstigen technischen Begebenheiten unserer Plattform oder allgemein des Netzwerks zu Ausfällen kommen.\n        </Text>\n        <Text>\n          Weiterhin behält sich CUBORR das Recht vor, den Zugriff auf die Plattform oder seine Funktionen in seinem eigenen Ermessen, vorübergehend oder dauerhaft, vollständig oder teilweise; zu ändern oder auszusetzen.\n        </Text>\n\n        <SectionTitle>9. Änderung der AGB</SectionTitle>\n        <Text>\n          Diese AGB und die per ausdrücklicher Bezugnahme darin aufgenommenen Dokumente bilden die vollständige Vereinbarung zwischen dir und CUBORR bezüglich seiner Nutzung der Plattform und der Leistungen. Weitere Dokumente, insbesondere die Hinweise auf der Plattform (FAQ usw.) dienen als Richtlinien und können Regelungen im Einzelnen konkretisieren.\n        </Text>\n        <Text>\n          CUBORR behält sich das Recht vor, diese AGB zu ändern, um sie einer veränderten technologischen oder geschäftlichen Umgebung oder einer geänderten Rechtslage anzupassen. Ist eine solche Änderung erforderlich, werden wir dich darüber per Email und mindestens 14 Tage vor Inkrafttreten der geänderten AGB informieren. Die Änderungen in den AGB werden wirksam, wenn du nicht innerhalb der in der E-Mail genannten Frist (die in jedem Fall mindestens 14 Tage beträgt) nach Erhalt dieser E-Mail ausdrücklich und in Textform der Änderung widersprichst. Auf diese Frist und die Folgen eines Widerspruchs werden wir dich in der E-Mail nochmals hinweisen.\n        </Text>\n\n        <SectionTitle>10. Geltendes Recht – Rechtsstreit</SectionTitle>\n        <Text>\n          Diese AGB sind in deutscher Sprache verfasst und unterliegen dem deutschen Recht unter Ausschluss des UN-Kaufrechts.\n        </Text>\n        <Text>\n          Wir sind nicht verpflichtet und grundsätzlich nicht bereit an einem Streitbeilegungsverfahren vor einer Verbraucherschlichtungsstelle teilzunehmen.\n        </Text>\n        <Text>\n          Bei jeglichen Fragen kannst du dich unter Verwendung der auf der Website verfügbaren E-Mail-Adressen an uns wenden. \n        </Text>\n      </StyledContainer>\n      <Footer />\n    </div>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Container, Footer, Navbar } from 'src/components'\n\n\nconst StyledContainer = styled(Container)`\n  min-height: 80vh;\n  padding-top: var(--margin-l);\n`;\n\nconst Title = styled.p`\n  font-size: 0.8rem;\n  font-weight: 400;\n  color: var(--color-text-dark);\n  margin-bottom: var(--margin-s);\n`;\n\nconst Text = styled.h1`\n    font-size: 4rem;\n    font-weight: 700;\n    color: var(--color-text-light);\n    margin-bottom: var(--margin-l);\n`\n\nconst AssignmentTitle = styled.h4`\n    font-size: 1.8rem;\n    font-weight: 600;\n    color: var(--color-text-light);\n    margin-top: var(--margin-l);\n    margin-bottom: var(--margin-l);\n`\n\nconst AssignmentText = styled.p`\n    font-size: 1rem;\n    font-weight: 500;\n    color: var(--color-text-light);\n    margin-bottom: var(--margin-l);\n    cursor: pointer;\n`\n\nexport const Metrics = () => {\n  const [assignments, setAssignments] = React.useState([])\n  const [assignmentsCount, setAssignmentsCount] = React.useState()\n  const [pageVisits, setPageVisitsCount] = React.useState()\n  const [contractorsCount, setContractorsCount] = React.useState()\n  const [clientsCount, setClientsCount] = React.useState()\n\n  React.useEffect(() => {\n    let pw = localStorage.getItem(\"master_key\")\n    if (!pw) {\n      pw = prompt(\"Please enter the master key\");\n      if (pw) {\n        localStorage.setItem(\"master_key\", pw)\n      }\n    }\n    const retrieveMetrics = async (key) => {\n      // get all restricted endpoints\n      let res = await fetch(`/api/admin/assignments`, {\n        method: 'GET',\n        headers: { 'X-Master-Key': key }\n      });\n      if (res.status === 200) {\n        const data = await res.json()\n        console.log(data)\n        setAssignments(data)\n      }\n      res = await fetch(`/api/admin/assignments/count`, {\n        method: 'GET',\n        headers: { 'X-Master-Key': key }\n      });\n      if (res.status === 200) {\n        const data = await res.json()\n        setAssignmentsCount(data)\n      }\n      res = await fetch(`/api/admin/page-visits/count`, {\n        method: 'GET',\n        headers: { 'X-Master-Key': key }\n      });\n      if (res.status === 200) {\n        const data = await res.json()\n        setPageVisitsCount(data)\n      }\n      res = await fetch(`/api/admin/contractors/count`, {\n        method: 'GET',\n        headers: { 'X-Master-Key': key }\n      });\n      if (res.status === 200) {\n        const data = await res.json()\n        setContractorsCount(data)\n      }\n      res = await fetch(`/api/admin/clients/count`, {\n        method: 'GET',\n        headers: { 'X-Master-Key': key }\n      });\n      if (res.status === 200) {\n        const data = await res.json()\n        setClientsCount(data)\n      }\n    }\n    retrieveMetrics(pw)\n  }, [])\n\n  const onClickDelete = async (item) => {\n    const message = \"Are you sure you would like to delete the assignment \"\n    if (window.confirm(message + item.title)) {\n      const key = localStorage.getItem(\"master_key\")\n      const res = await fetch(`/api/admin/assignment/${item._id.$oid}`, {\n        method: 'DELETE',\n        headers: { 'X-Master-Key': key ?? \"\" }\n      });\n      if (res.status === 204) {\n        // deleted\n        window.alert(`${item.title} has been successfully deleted, please refresh the page`);\n      } else {\n        window.alert(\"Item could not be deleted please try again\");\n      }\n    }\n  }\n\n  return (\n    <div>\n      <Navbar />\n      <StyledContainer>\n        {\n          pageVisits && (\n            <>\n              <Title>PAGE VISITS</Title>\n              <Text>{pageVisits}</Text>\n            </>\n          )\n        }\n        {\n          assignmentsCount && (\n            <>\n              <Title>NUMBER OF ASSIGNMENTS</Title>\n              <Text>{assignmentsCount}</Text>\n            </>\n          )\n        }\n        {\n          contractorsCount && (\n            <>\n              <Title>NUMBER OF CONTRACTORS</Title>\n              <Text>{contractorsCount}</Text>\n            </>\n          )\n        }\n        {\n          clientsCount && (\n            <>\n              <Title>NUMBER OF CLIENTS</Title>\n              <Text>{clientsCount}</Text>\n            </>\n          )\n        }\n        {\n          assignments.length > 0 && (\n            <>\n              <AssignmentTitle>Assignments</AssignmentTitle>\n              {\n                assignments.map((item: any) => (\n                  <AssignmentText onClick={() => onClickDelete(item)}>{\"DELETE  \" + item.title}</AssignmentText>\n                ))\n              }\n            </>\n          )\n        }\n\n\n      </StyledContainer>\n      <Footer />\n    </div>\n  );\n};\n","import React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport { Home } from 'src/scenes/home/home';\nimport { ClientAssignment } from 'src/scenes/client-assignment';\nimport { ContractorAssignment } from 'src/scenes/contractor-assignment';\nimport { Root } from 'src/scenes/root/root';\nimport { NotFound, UnexpectedError } from 'src/scenes/error';\nimport { PrivacyPolicy, CompanyDetails, TermsAndConditions } from 'src/scenes/legal';\nimport { Metrics } from 'src/scenes/metrics';\n\nexport const Router = () => {\n  return (\n    <BrowserRouter>\n      <Root>\n        <Switch>\n          <Redirect exact from=\"/\" to=\"/beta\" />\n          <Route exact path=\"/beta\" component={Home} />\n          <Route path=\"/beta/client/assignments\" component={ClientAssignment} />\n          <Route path=\"/beta/contractor/assignments\" component={ContractorAssignment} />\n          <Route path=\"/privacy-policy\" component={PrivacyPolicy} />\n          <Route path=\"/company-details\" component={CompanyDetails} />\n          <Route path=\"/metrics\" component={Metrics} />\n          <Route path=\"/terms-and-conditions\" component={TermsAndConditions} />\n          <Route path=\"/unexpected-error\" component={UnexpectedError} />\n          <Route path=\"*\" component={NotFound} />\n        </Switch>\n      </Root>\n    </BrowserRouter>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\n// the translations\n// (tip move them in a JSON file and import them)\nconst resources = {\n  en: {\n    translation: require('./locales/en.json'),\n  },\n  de: {\n    translation: require('./locales/de.json'),\n  },\n};\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng: 'de',\n    keySeparator: '.',\n    interpolation: {\n      escapeValue: false, // react already safes from xss\n    },\n  });\n\nexport default i18n;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunkMiddleware from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { rootReducer } from './store';\nimport { Router } from './routes';\nimport * as serviceWorker from './serviceWorker';\nimport moment from 'moment';\nimport 'moment/locale/de';\nimport './index.css';\nimport './i18n/i18n';\n// @ts-ignore\n// TODO change language option\nmoment.locale('de');\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}